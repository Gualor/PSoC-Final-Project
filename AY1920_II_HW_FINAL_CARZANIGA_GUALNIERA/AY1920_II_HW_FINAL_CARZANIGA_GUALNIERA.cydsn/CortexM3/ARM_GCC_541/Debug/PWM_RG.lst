ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_RG.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_RG_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	PWM_RG_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	PWM_RG_Enable, %function
  25              	PWM_RG_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\PWM_RG.c"
   1:Generated_Source\PSoC5/PWM_RG.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_RG.c **** * File Name: PWM_RG.c
   3:Generated_Source\PSoC5/PWM_RG.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_RG.c **** *
   5:Generated_Source\PSoC5/PWM_RG.c **** * Description:
   6:Generated_Source\PSoC5/PWM_RG.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_RG.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_RG.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_RG.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_RG.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_RG.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_RG.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_RG.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_RG.c **** *
  15:Generated_Source\PSoC5/PWM_RG.c **** * Note:
  16:Generated_Source\PSoC5/PWM_RG.c **** *
  17:Generated_Source\PSoC5/PWM_RG.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_RG.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_RG.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_RG.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_RG.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_RG.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_RG.c **** 
  24:Generated_Source\PSoC5/PWM_RG.c **** #include "PWM_RG.h"
  25:Generated_Source\PSoC5/PWM_RG.c **** 
  26:Generated_Source\PSoC5/PWM_RG.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_RG.c **** #ifdef PWM_RG_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_RG.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_RG.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_RG.c **** #endif /* PWM_RG_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 2


  31:Generated_Source\PSoC5/PWM_RG.c **** 
  32:Generated_Source\PSoC5/PWM_RG.c **** uint8 PWM_RG_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_RG.c **** 
  34:Generated_Source\PSoC5/PWM_RG.c **** 
  35:Generated_Source\PSoC5/PWM_RG.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_RG.c **** * Function Name: PWM_RG_Start
  37:Generated_Source\PSoC5/PWM_RG.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_RG.c **** *
  39:Generated_Source\PSoC5/PWM_RG.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_RG.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_RG.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_RG.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_RG.c **** *
  44:Generated_Source\PSoC5/PWM_RG.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_RG.c **** *  None
  46:Generated_Source\PSoC5/PWM_RG.c **** *
  47:Generated_Source\PSoC5/PWM_RG.c **** * Return:
  48:Generated_Source\PSoC5/PWM_RG.c **** *  None
  49:Generated_Source\PSoC5/PWM_RG.c **** *
  50:Generated_Source\PSoC5/PWM_RG.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_RG.c **** *  PWM_RG_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_RG.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_RG.c **** *
  54:Generated_Source\PSoC5/PWM_RG.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_RG.c **** void PWM_RG_Start(void) 
  56:Generated_Source\PSoC5/PWM_RG.c **** {
  57:Generated_Source\PSoC5/PWM_RG.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_RG.c ****     if(PWM_RG_initVar == 0u)
  59:Generated_Source\PSoC5/PWM_RG.c ****     {
  60:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_Init();
  61:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_initVar = 1u;
  62:Generated_Source\PSoC5/PWM_RG.c ****     }
  63:Generated_Source\PSoC5/PWM_RG.c ****     PWM_RG_Enable();
  64:Generated_Source\PSoC5/PWM_RG.c **** 
  65:Generated_Source\PSoC5/PWM_RG.c **** }
  66:Generated_Source\PSoC5/PWM_RG.c **** 
  67:Generated_Source\PSoC5/PWM_RG.c **** 
  68:Generated_Source\PSoC5/PWM_RG.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_RG.c **** * Function Name: PWM_RG_Init
  70:Generated_Source\PSoC5/PWM_RG.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_RG.c **** *
  72:Generated_Source\PSoC5/PWM_RG.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_RG.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_RG.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_RG.c **** *  PWM_RG_Start().
  76:Generated_Source\PSoC5/PWM_RG.c **** *
  77:Generated_Source\PSoC5/PWM_RG.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_RG.c **** *  None
  79:Generated_Source\PSoC5/PWM_RG.c **** *
  80:Generated_Source\PSoC5/PWM_RG.c **** * Return:
  81:Generated_Source\PSoC5/PWM_RG.c **** *  None
  82:Generated_Source\PSoC5/PWM_RG.c **** *
  83:Generated_Source\PSoC5/PWM_RG.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_RG.c **** void PWM_RG_Init(void) 
  85:Generated_Source\PSoC5/PWM_RG.c **** {
  86:Generated_Source\PSoC5/PWM_RG.c ****     #if (PWM_RG_UsingFixedFunction || PWM_RG_UseControl)
  87:Generated_Source\PSoC5/PWM_RG.c ****         uint8 ctrl;
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 3


  88:Generated_Source\PSoC5/PWM_RG.c ****     #endif /* (PWM_RG_UsingFixedFunction || PWM_RG_UseControl) */
  89:Generated_Source\PSoC5/PWM_RG.c **** 
  90:Generated_Source\PSoC5/PWM_RG.c ****     #if(!PWM_RG_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_RG.c ****         #if(PWM_RG_UseStatus)
  92:Generated_Source\PSoC5/PWM_RG.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_RG.c ****             uint8 PWM_RG_interruptState;
  94:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (PWM_RG_UseStatus) */
  95:Generated_Source\PSoC5/PWM_RG.c ****     #endif /* (!PWM_RG_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_RG.c **** 
  97:Generated_Source\PSoC5/PWM_RG.c ****     #if (PWM_RG_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_RG.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_CONTROL |= PWM_RG_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_RG.c ****         #if (PWM_RG_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_RG.c ****             PWM_RG_CONTROL |= PWM_RG_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (PWM_RG_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_RG.c **** 
 104:Generated_Source\PSoC5/PWM_RG.c ****         ctrl = PWM_RG_CONTROL3 & ((uint8 )(~PWM_RG_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_CONTROL3 = ctrl | PWM_RG_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_RG.c **** 
 107:Generated_Source\PSoC5/PWM_RG.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_RT1 &= ((uint8)(~PWM_RG_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_RT1 |= PWM_RG_SYNC;
 110:Generated_Source\PSoC5/PWM_RG.c **** 
 111:Generated_Source\PSoC5/PWM_RG.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_RT1 &= ((uint8)(~PWM_RG_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_RT1 |= PWM_RG_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_RG.c **** 
 115:Generated_Source\PSoC5/PWM_RG.c ****     #elif (PWM_RG_UseControl)
 116:Generated_Source\PSoC5/PWM_RG.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_RG.c ****         ctrl = PWM_RG_CONTROL & ((uint8)(~PWM_RG_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/PWM_RG.c ****                 ((uint8)(~PWM_RG_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_CONTROL = ctrl | PWM_RG_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/PWM_RG.c ****                                    PWM_RG_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_RG.c ****     #endif /* (PWM_RG_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_RG.c **** 
 123:Generated_Source\PSoC5/PWM_RG.c ****     #if (!PWM_RG_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_RG.c ****         #if (PWM_RG_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_RG.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_RG.c ****             PWM_RG_AUX_CONTROLDP0 |= (PWM_RG_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_RG.c ****         #else /* (PWM_RG_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_RG.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_RG.c ****             PWM_RG_AUX_CONTROLDP0 |= (PWM_RG_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM_RG.c ****             PWM_RG_AUX_CONTROLDP1 |= (PWM_RG_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (PWM_RG_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_RG.c **** 
 133:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_WriteCounter(PWM_RG_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/PWM_RG.c ****     #endif /* (!PWM_RG_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_RG.c **** 
 136:Generated_Source\PSoC5/PWM_RG.c ****     PWM_RG_WritePeriod(PWM_RG_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/PWM_RG.c **** 
 138:Generated_Source\PSoC5/PWM_RG.c ****         #if (PWM_RG_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_RG.c ****             PWM_RG_WriteCompare(PWM_RG_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM_RG.c ****         #else
 141:Generated_Source\PSoC5/PWM_RG.c ****             PWM_RG_WriteCompare1(PWM_RG_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM_RG.c ****             PWM_RG_WriteCompare2(PWM_RG_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (PWM_RG_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_RG.c **** 
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 4


 145:Generated_Source\PSoC5/PWM_RG.c ****         #if (PWM_RG_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_RG.c ****             PWM_RG_WriteKillTime(PWM_RG_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (PWM_RG_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_RG.c **** 
 149:Generated_Source\PSoC5/PWM_RG.c ****         #if (PWM_RG_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_RG.c ****             PWM_RG_WriteDeadTime(PWM_RG_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (PWM_RG_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_RG.c **** 
 153:Generated_Source\PSoC5/PWM_RG.c ****     #if (PWM_RG_UseStatus || PWM_RG_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_SetInterruptMode(PWM_RG_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/PWM_RG.c ****     #endif /* (PWM_RG_UseStatus || PWM_RG_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_RG.c **** 
 157:Generated_Source\PSoC5/PWM_RG.c ****     #if (PWM_RG_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_RG.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_GLOBAL_ENABLE |= PWM_RG_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_RG.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_CONTROL2 |= PWM_RG_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_RG.c ****     #else
 163:Generated_Source\PSoC5/PWM_RG.c ****         #if(PWM_RG_UseStatus)
 164:Generated_Source\PSoC5/PWM_RG.c **** 
 165:Generated_Source\PSoC5/PWM_RG.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_RG.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_RG.c ****             PWM_RG_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM_RG.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_RG.c ****             PWM_RG_STATUS_AUX_CTRL |= PWM_RG_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM_RG.c **** 
 171:Generated_Source\PSoC5/PWM_RG.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_RG.c ****             CyExitCriticalSection(PWM_RG_interruptState);
 173:Generated_Source\PSoC5/PWM_RG.c **** 
 174:Generated_Source\PSoC5/PWM_RG.c ****             /* Clear the FIFO to enable the PWM_RG_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_RG.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_RG.c ****             PWM_RG_ClearFIFO();
 177:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (PWM_RG_UseStatus) */
 178:Generated_Source\PSoC5/PWM_RG.c ****     #endif /* (PWM_RG_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_RG.c **** }
 180:Generated_Source\PSoC5/PWM_RG.c **** 
 181:Generated_Source\PSoC5/PWM_RG.c **** 
 182:Generated_Source\PSoC5/PWM_RG.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_RG.c **** * Function Name: PWM_RG_Enable
 184:Generated_Source\PSoC5/PWM_RG.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_RG.c **** *
 186:Generated_Source\PSoC5/PWM_RG.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_RG.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_RG.c **** *
 189:Generated_Source\PSoC5/PWM_RG.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_RG.c **** *  None
 191:Generated_Source\PSoC5/PWM_RG.c **** *
 192:Generated_Source\PSoC5/PWM_RG.c **** * Return:
 193:Generated_Source\PSoC5/PWM_RG.c **** *  None
 194:Generated_Source\PSoC5/PWM_RG.c **** *
 195:Generated_Source\PSoC5/PWM_RG.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_RG.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_RG.c **** *
 198:Generated_Source\PSoC5/PWM_RG.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_RG.c **** void PWM_RG_Enable(void) 
 200:Generated_Source\PSoC5/PWM_RG.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/PWM_RG.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_RG.c ****     #if (PWM_RG_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_GLOBAL_ENABLE |= PWM_RG_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_GLOBAL_STBY_ENABLE |= PWM_RG_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_RG.c ****     #endif /* (PWM_RG_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_RG.c **** 
 207:Generated_Source\PSoC5/PWM_RG.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_RG.c ****     #if (PWM_RG_UseControl || PWM_RG_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_CONTROL |= PWM_RG_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 74640040 		.word	1073767540
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	PWM_RG_Enable, .-PWM_RG_Enable
  46              		.section	.text.PWM_RG_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	PWM_RG_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	PWM_RG_Stop, %function
  52              	PWM_RG_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/PWM_RG.c ****     #endif /* (PWM_RG_UseControl || PWM_RG_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_RG.c **** }
 212:Generated_Source\PSoC5/PWM_RG.c **** 
 213:Generated_Source\PSoC5/PWM_RG.c **** 
 214:Generated_Source\PSoC5/PWM_RG.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_RG.c **** * Function Name: PWM_RG_Stop
 216:Generated_Source\PSoC5/PWM_RG.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_RG.c **** *
 218:Generated_Source\PSoC5/PWM_RG.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_RG.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_RG.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_RG.c **** *
 222:Generated_Source\PSoC5/PWM_RG.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_RG.c **** *  None
 224:Generated_Source\PSoC5/PWM_RG.c **** *
 225:Generated_Source\PSoC5/PWM_RG.c **** * Return:
 226:Generated_Source\PSoC5/PWM_RG.c **** *  None
 227:Generated_Source\PSoC5/PWM_RG.c **** *
 228:Generated_Source\PSoC5/PWM_RG.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_RG.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_RG.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_RG.c **** *
 232:Generated_Source\PSoC5/PWM_RG.c **** *******************************************************************************/
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 6


 233:Generated_Source\PSoC5/PWM_RG.c **** void PWM_RG_Stop(void) 
 234:Generated_Source\PSoC5/PWM_RG.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/PWM_RG.c ****     #if (PWM_RG_UseControl || PWM_RG_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_CONTROL &= ((uint8)(~PWM_RG_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 74640040 		.word	1073767540
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	PWM_RG_Stop, .-PWM_RG_Stop
  72              		.section	.text.PWM_RG_WriteCounter,"ax",%progbits
  73              		.align	2
  74              		.global	PWM_RG_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	PWM_RG_WriteCounter, %function
  78              	PWM_RG_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/PWM_RG.c ****     #endif /* (PWM_RG_UseControl || PWM_RG_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_RG.c **** 
 239:Generated_Source\PSoC5/PWM_RG.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_RG.c ****     #if (PWM_RG_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_GLOBAL_ENABLE &= ((uint8)(~PWM_RG_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_RG_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_RG.c ****     #endif /* (PWM_RG_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_RG.c **** }
 245:Generated_Source\PSoC5/PWM_RG.c **** 
 246:Generated_Source\PSoC5/PWM_RG.c **** #if (PWM_RG_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_RG.c ****     #if (PWM_RG_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_RG.c **** 
 249:Generated_Source\PSoC5/PWM_RG.c **** 
 250:Generated_Source\PSoC5/PWM_RG.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_RG.c ****         * Function Name: PWM_RG_SetCompareMode
 252:Generated_Source\PSoC5/PWM_RG.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_RG.c ****         *
 254:Generated_Source\PSoC5/PWM_RG.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_RG.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_RG.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_RG.c ****         *
 258:Generated_Source\PSoC5/PWM_RG.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_RG.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_RG.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_RG.c ****         *
 262:Generated_Source\PSoC5/PWM_RG.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_RG.c ****         *  None
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 7


 264:Generated_Source\PSoC5/PWM_RG.c ****         *
 265:Generated_Source\PSoC5/PWM_RG.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_RG.c ****         void PWM_RG_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_RG.c ****         {
 268:Generated_Source\PSoC5/PWM_RG.c ****             #if(PWM_RG_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_RG.c **** 
 270:Generated_Source\PSoC5/PWM_RG.c ****                 #if(0 != PWM_RG_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_RG.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_RG_CTRL_CMPMODE1_S
 272:Generated_Source\PSoC5/PWM_RG.c ****                 #else
 273:Generated_Source\PSoC5/PWM_RG.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_RG.c ****                 #endif /* (0 != PWM_RG_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_RG.c **** 
 276:Generated_Source\PSoC5/PWM_RG.c ****                 PWM_RG_CONTROL3 &= ((uint8)(~PWM_RG_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC5/PWM_RG.c ****                 PWM_RG_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_RG.c **** 
 279:Generated_Source\PSoC5/PWM_RG.c ****             #elif (PWM_RG_UseControl)
 280:Generated_Source\PSoC5/PWM_RG.c **** 
 281:Generated_Source\PSoC5/PWM_RG.c ****                 #if(0 != PWM_RG_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_RG.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_RG_CTRL_CMPMODE1_
 283:Generated_Source\PSoC5/PWM_RG.c ****                                                 PWM_RG_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_RG.c ****                 #else
 285:Generated_Source\PSoC5/PWM_RG.c ****                     uint8 comparemode1masked = comparemode & PWM_RG_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_RG.c ****                 #endif /* (0 != PWM_RG_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_RG.c **** 
 288:Generated_Source\PSoC5/PWM_RG.c ****                 #if(0 != PWM_RG_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_RG.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_RG_CTRL_CMPMODE2_
 290:Generated_Source\PSoC5/PWM_RG.c ****                                                PWM_RG_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_RG.c ****                 #else
 292:Generated_Source\PSoC5/PWM_RG.c ****                     uint8 comparemode2masked = comparemode & PWM_RG_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_RG.c ****                 #endif /* (0 != PWM_RG_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_RG.c **** 
 295:Generated_Source\PSoC5/PWM_RG.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_RG.c ****                 PWM_RG_CONTROL &= ((uint8)(~(PWM_RG_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_RG.c ****                                             PWM_RG_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_RG.c ****                 PWM_RG_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_RG.c **** 
 300:Generated_Source\PSoC5/PWM_RG.c ****             #else
 301:Generated_Source\PSoC5/PWM_RG.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_RG.c ****             #endif /* (PWM_RG_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_RG.c ****         }
 304:Generated_Source\PSoC5/PWM_RG.c ****     #endif /* PWM_RG_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_RG.c **** 
 306:Generated_Source\PSoC5/PWM_RG.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_RG.c **** 
 308:Generated_Source\PSoC5/PWM_RG.c ****     #if (PWM_RG_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_RG.c **** 
 310:Generated_Source\PSoC5/PWM_RG.c **** 
 311:Generated_Source\PSoC5/PWM_RG.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_RG.c ****         * Function Name: PWM_RG_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_RG.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_RG.c ****         *
 315:Generated_Source\PSoC5/PWM_RG.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_RG.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_RG.c ****         *
 318:Generated_Source\PSoC5/PWM_RG.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_RG.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_RG.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 8


 321:Generated_Source\PSoC5/PWM_RG.c ****         *
 322:Generated_Source\PSoC5/PWM_RG.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_RG.c ****         *  None
 324:Generated_Source\PSoC5/PWM_RG.c ****         *
 325:Generated_Source\PSoC5/PWM_RG.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_RG.c ****         void PWM_RG_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_RG.c ****         {
 328:Generated_Source\PSoC5/PWM_RG.c ****             #if(0 != PWM_RG_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_RG.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_RG_CTRL_CMPMODE1_SHIFT
 330:Generated_Source\PSoC5/PWM_RG.c ****                                            PWM_RG_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_RG.c ****             #else
 332:Generated_Source\PSoC5/PWM_RG.c ****                 uint8 comparemodemasked = comparemode & PWM_RG_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_RG.c ****             #endif /* (0 != PWM_RG_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_RG.c **** 
 335:Generated_Source\PSoC5/PWM_RG.c ****             #if (PWM_RG_UseControl)
 336:Generated_Source\PSoC5/PWM_RG.c ****                 PWM_RG_CONTROL &= ((uint8)(~PWM_RG_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/PWM_RG.c ****                 PWM_RG_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_RG.c ****             #endif /* (PWM_RG_UseControl) */
 339:Generated_Source\PSoC5/PWM_RG.c ****         }
 340:Generated_Source\PSoC5/PWM_RG.c ****     #endif /* PWM_RG_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_RG.c **** 
 342:Generated_Source\PSoC5/PWM_RG.c **** #if (PWM_RG_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_RG.c **** 
 344:Generated_Source\PSoC5/PWM_RG.c **** 
 345:Generated_Source\PSoC5/PWM_RG.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_RG.c ****     * Function Name: PWM_RG_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_RG.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_RG.c ****     *
 349:Generated_Source\PSoC5/PWM_RG.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_RG.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_RG.c ****     *
 352:Generated_Source\PSoC5/PWM_RG.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_RG.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_RG.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_RG.c ****     *
 356:Generated_Source\PSoC5/PWM_RG.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_RG.c ****     *  None
 358:Generated_Source\PSoC5/PWM_RG.c ****     *
 359:Generated_Source\PSoC5/PWM_RG.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_RG.c ****     void PWM_RG_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_RG.c ****     {
 362:Generated_Source\PSoC5/PWM_RG.c **** 
 363:Generated_Source\PSoC5/PWM_RG.c ****         #if(0 != PWM_RG_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_RG.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_RG_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/PWM_RG.c ****                                                  PWM_RG_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_RG.c ****         #else
 367:Generated_Source\PSoC5/PWM_RG.c ****             uint8 comparemodemasked = comparemode & PWM_RG_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (0 != PWM_RG_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_RG.c **** 
 370:Generated_Source\PSoC5/PWM_RG.c ****         #if (PWM_RG_UseControl)
 371:Generated_Source\PSoC5/PWM_RG.c ****             PWM_RG_CONTROL &= ((uint8)(~PWM_RG_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/PWM_RG.c ****             PWM_RG_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (PWM_RG_UseControl) */
 374:Generated_Source\PSoC5/PWM_RG.c ****     }
 375:Generated_Source\PSoC5/PWM_RG.c ****     #endif /*PWM_RG_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_RG.c **** 
 377:Generated_Source\PSoC5/PWM_RG.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 9


 378:Generated_Source\PSoC5/PWM_RG.c **** 
 379:Generated_Source\PSoC5/PWM_RG.c **** 
 380:Generated_Source\PSoC5/PWM_RG.c **** #if (!PWM_RG_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_RG.c **** 
 382:Generated_Source\PSoC5/PWM_RG.c **** 
 383:Generated_Source\PSoC5/PWM_RG.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_RG.c ****     * Function Name: PWM_RG_WriteCounter
 385:Generated_Source\PSoC5/PWM_RG.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_RG.c ****     *
 387:Generated_Source\PSoC5/PWM_RG.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_RG.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_RG.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_RG.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_RG.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_RG.c ****     *
 393:Generated_Source\PSoC5/PWM_RG.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_RG.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_RG.c ****     *
 396:Generated_Source\PSoC5/PWM_RG.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_RG.c ****     *  None
 398:Generated_Source\PSoC5/PWM_RG.c ****     *
 399:Generated_Source\PSoC5/PWM_RG.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_RG.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_RG.c ****     *
 402:Generated_Source\PSoC5/PWM_RG.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_RG.c ****     void PWM_RG_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/PWM_RG.c ****                                        
 405:Generated_Source\PSoC5/PWM_RG.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/PWM_RG.c ****         CY_SET_REG8(PWM_RG_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 04640040 		.word	1073767428
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	PWM_RG_WriteCounter, .-PWM_RG_WriteCounter
  97              		.section	.text.PWM_RG_ReadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	PWM_RG_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	PWM_RG_ReadCounter, %function
 103              	PWM_RG_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/PWM_RG.c ****     }
 408:Generated_Source\PSoC5/PWM_RG.c **** 
 409:Generated_Source\PSoC5/PWM_RG.c **** 
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 10


 410:Generated_Source\PSoC5/PWM_RG.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_RG.c ****     * Function Name: PWM_RG_ReadCounter
 412:Generated_Source\PSoC5/PWM_RG.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_RG.c ****     *
 414:Generated_Source\PSoC5/PWM_RG.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_RG.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_RG.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_RG.c ****     *
 418:Generated_Source\PSoC5/PWM_RG.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_RG.c ****     *  None
 420:Generated_Source\PSoC5/PWM_RG.c ****     *
 421:Generated_Source\PSoC5/PWM_RG.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_RG.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_RG.c ****     *
 424:Generated_Source\PSoC5/PWM_RG.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_RG.c ****     uint8 PWM_RG_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_RG.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/PWM_RG.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_RG.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_RG.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_RG.c ****           (void)CY_GET_REG8(PWM_RG_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/PWM_RG.c **** 
 432:Generated_Source\PSoC5/PWM_RG.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_RG.c ****         return (CY_GET_REG8(PWM_RG_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 434:Generated_Source\PSoC5/PWM_RG.c ****     }
 116              		.loc 1 434 0
 117 0008 7047     		bx	lr
 118              	.L12:
 119 000a 00BF     		.align	2
 120              	.L11:
 121 000c 14640040 		.word	1073767444
 122 0010 54640040 		.word	1073767508
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	PWM_RG_ReadCounter, .-PWM_RG_ReadCounter
 126              		.section	.text.PWM_RG_WritePeriod,"ax",%progbits
 127              		.align	2
 128              		.global	PWM_RG_WritePeriod
 129              		.thumb
 130              		.thumb_func
 131              		.type	PWM_RG_WritePeriod, %function
 132              	PWM_RG_WritePeriod:
 133              	.LFB7:
 435:Generated_Source\PSoC5/PWM_RG.c **** 
 436:Generated_Source\PSoC5/PWM_RG.c ****     #if (PWM_RG_UseStatus)
 437:Generated_Source\PSoC5/PWM_RG.c **** 
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 11


 438:Generated_Source\PSoC5/PWM_RG.c **** 
 439:Generated_Source\PSoC5/PWM_RG.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_RG.c ****         * Function Name: PWM_RG_ClearFIFO
 441:Generated_Source\PSoC5/PWM_RG.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_RG.c ****         *
 443:Generated_Source\PSoC5/PWM_RG.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_RG.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_RG.c ****         *
 446:Generated_Source\PSoC5/PWM_RG.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_RG.c ****         *  None
 448:Generated_Source\PSoC5/PWM_RG.c ****         *
 449:Generated_Source\PSoC5/PWM_RG.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_RG.c ****         *  None
 451:Generated_Source\PSoC5/PWM_RG.c ****         *
 452:Generated_Source\PSoC5/PWM_RG.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_RG.c ****         void PWM_RG_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_RG.c ****         {
 455:Generated_Source\PSoC5/PWM_RG.c ****             while(0u != (PWM_RG_ReadStatusRegister() & PWM_RG_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM_RG.c ****             {
 457:Generated_Source\PSoC5/PWM_RG.c ****                 (void)PWM_RG_ReadCapture();
 458:Generated_Source\PSoC5/PWM_RG.c ****             }
 459:Generated_Source\PSoC5/PWM_RG.c ****         }
 460:Generated_Source\PSoC5/PWM_RG.c **** 
 461:Generated_Source\PSoC5/PWM_RG.c ****     #endif /* PWM_RG_UseStatus */
 462:Generated_Source\PSoC5/PWM_RG.c **** 
 463:Generated_Source\PSoC5/PWM_RG.c **** #endif /* !PWM_RG_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_RG.c **** 
 465:Generated_Source\PSoC5/PWM_RG.c **** 
 466:Generated_Source\PSoC5/PWM_RG.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_RG.c **** * Function Name: PWM_RG_WritePeriod
 468:Generated_Source\PSoC5/PWM_RG.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_RG.c **** *
 470:Generated_Source\PSoC5/PWM_RG.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_RG.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_RG.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_RG.c **** *
 474:Generated_Source\PSoC5/PWM_RG.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_RG.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_RG.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_RG.c **** *
 478:Generated_Source\PSoC5/PWM_RG.c **** * Return:
 479:Generated_Source\PSoC5/PWM_RG.c **** *  None
 480:Generated_Source\PSoC5/PWM_RG.c **** *
 481:Generated_Source\PSoC5/PWM_RG.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_RG.c **** void PWM_RG_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/PWM_RG.c **** {
 134              		.loc 1 483 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL1:
 484:Generated_Source\PSoC5/PWM_RG.c ****     #if(PWM_RG_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_RG.c ****         CY_SET_REG16(PWM_RG_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_RG.c ****     #else
 487:Generated_Source\PSoC5/PWM_RG.c ****         CY_SET_REG8(PWM_RG_PERIOD_LSB_PTR, period);
 140              		.loc 1 487 0
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 12


 141 0000 014B     		ldr	r3, .L14
 142 0002 1870     		strb	r0, [r3]
 143 0004 7047     		bx	lr
 144              	.L15:
 145 0006 00BF     		.align	2
 146              	.L14:
 147 0008 44640040 		.word	1073767492
 148              		.cfi_endproc
 149              	.LFE7:
 150              		.size	PWM_RG_WritePeriod, .-PWM_RG_WritePeriod
 151              		.section	.text.PWM_RG_WriteCompare1,"ax",%progbits
 152              		.align	2
 153              		.global	PWM_RG_WriteCompare1
 154              		.thumb
 155              		.thumb_func
 156              		.type	PWM_RG_WriteCompare1, %function
 157              	PWM_RG_WriteCompare1:
 158              	.LFB8:
 488:Generated_Source\PSoC5/PWM_RG.c ****     #endif /* (PWM_RG_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_RG.c **** }
 490:Generated_Source\PSoC5/PWM_RG.c **** 
 491:Generated_Source\PSoC5/PWM_RG.c **** #if (PWM_RG_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_RG.c **** 
 493:Generated_Source\PSoC5/PWM_RG.c **** 
 494:Generated_Source\PSoC5/PWM_RG.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_RG.c ****     * Function Name: PWM_RG_WriteCompare
 496:Generated_Source\PSoC5/PWM_RG.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_RG.c ****     *
 498:Generated_Source\PSoC5/PWM_RG.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_RG.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_RG.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_RG.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_RG.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_RG.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_RG.c ****     *
 505:Generated_Source\PSoC5/PWM_RG.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_RG.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_RG.c ****     *
 508:Generated_Source\PSoC5/PWM_RG.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_RG.c ****     *  None
 510:Generated_Source\PSoC5/PWM_RG.c ****     *
 511:Generated_Source\PSoC5/PWM_RG.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_RG.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_RG.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_RG.c ****     *
 515:Generated_Source\PSoC5/PWM_RG.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_RG.c ****     void PWM_RG_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/PWM_RG.c ****                                        
 518:Generated_Source\PSoC5/PWM_RG.c ****     {
 519:Generated_Source\PSoC5/PWM_RG.c ****         #if(PWM_RG_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_RG.c ****             CY_SET_REG16(PWM_RG_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM_RG.c ****         #else
 522:Generated_Source\PSoC5/PWM_RG.c ****             CY_SET_REG8(PWM_RG_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (PWM_RG_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_RG.c **** 
 525:Generated_Source\PSoC5/PWM_RG.c ****         #if (PWM_RG_PWMMode == PWM_RG__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_RG.c ****             #if(PWM_RG_UsingFixedFunction)
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 13


 527:Generated_Source\PSoC5/PWM_RG.c ****                 CY_SET_REG16(PWM_RG_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_RG.c ****             #else
 529:Generated_Source\PSoC5/PWM_RG.c ****                 CY_SET_REG8(PWM_RG_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_RG.c ****             #endif /* (PWM_RG_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (PWM_RG_PWMMode == PWM_RG__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_RG.c ****     }
 533:Generated_Source\PSoC5/PWM_RG.c **** 
 534:Generated_Source\PSoC5/PWM_RG.c **** 
 535:Generated_Source\PSoC5/PWM_RG.c **** #else
 536:Generated_Source\PSoC5/PWM_RG.c **** 
 537:Generated_Source\PSoC5/PWM_RG.c **** 
 538:Generated_Source\PSoC5/PWM_RG.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_RG.c ****     * Function Name: PWM_RG_WriteCompare1
 540:Generated_Source\PSoC5/PWM_RG.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_RG.c ****     *
 542:Generated_Source\PSoC5/PWM_RG.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_RG.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_RG.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_RG.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_RG.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_RG.c ****     *
 548:Generated_Source\PSoC5/PWM_RG.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_RG.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_RG.c ****     *
 551:Generated_Source\PSoC5/PWM_RG.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_RG.c ****     *  None
 553:Generated_Source\PSoC5/PWM_RG.c ****     *
 554:Generated_Source\PSoC5/PWM_RG.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_RG.c ****     void PWM_RG_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC5/PWM_RG.c ****                                         
 557:Generated_Source\PSoC5/PWM_RG.c ****     {
 159              		.loc 1 557 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL2:
 558:Generated_Source\PSoC5/PWM_RG.c ****         #if(PWM_RG_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_RG.c ****             CY_SET_REG16(PWM_RG_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_RG.c ****         #else
 561:Generated_Source\PSoC5/PWM_RG.c ****             CY_SET_REG8(PWM_RG_COMPARE1_LSB_PTR, compare);
 165              		.loc 1 561 0
 166 0000 014B     		ldr	r3, .L17
 167 0002 1870     		strb	r0, [r3]
 168 0004 7047     		bx	lr
 169              	.L18:
 170 0006 00BF     		.align	2
 171              	.L17:
 172 0008 24640040 		.word	1073767460
 173              		.cfi_endproc
 174              	.LFE8:
 175              		.size	PWM_RG_WriteCompare1, .-PWM_RG_WriteCompare1
 176              		.section	.text.PWM_RG_WriteCompare2,"ax",%progbits
 177              		.align	2
 178              		.global	PWM_RG_WriteCompare2
 179              		.thumb
 180              		.thumb_func
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 14


 181              		.type	PWM_RG_WriteCompare2, %function
 182              	PWM_RG_WriteCompare2:
 183              	.LFB9:
 562:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (PWM_RG_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_RG.c ****     }
 564:Generated_Source\PSoC5/PWM_RG.c **** 
 565:Generated_Source\PSoC5/PWM_RG.c **** 
 566:Generated_Source\PSoC5/PWM_RG.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_RG.c ****     * Function Name: PWM_RG_WriteCompare2
 568:Generated_Source\PSoC5/PWM_RG.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_RG.c ****     *
 570:Generated_Source\PSoC5/PWM_RG.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_RG.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_RG.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_RG.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_RG.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_RG.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_RG.c ****     *
 577:Generated_Source\PSoC5/PWM_RG.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_RG.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_RG.c ****     *
 580:Generated_Source\PSoC5/PWM_RG.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_RG.c ****     *  None
 582:Generated_Source\PSoC5/PWM_RG.c ****     *
 583:Generated_Source\PSoC5/PWM_RG.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_RG.c ****     void PWM_RG_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/PWM_RG.c ****                                         
 586:Generated_Source\PSoC5/PWM_RG.c ****     {
 184              		.loc 1 586 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL3:
 587:Generated_Source\PSoC5/PWM_RG.c ****         #if(PWM_RG_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_RG.c ****             CY_SET_REG16(PWM_RG_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_RG.c ****         #else
 590:Generated_Source\PSoC5/PWM_RG.c ****             CY_SET_REG8(PWM_RG_COMPARE2_LSB_PTR, compare);
 190              		.loc 1 590 0
 191 0000 014B     		ldr	r3, .L20
 192 0002 1870     		strb	r0, [r3]
 193 0004 7047     		bx	lr
 194              	.L21:
 195 0006 00BF     		.align	2
 196              	.L20:
 197 0008 34640040 		.word	1073767476
 198              		.cfi_endproc
 199              	.LFE9:
 200              		.size	PWM_RG_WriteCompare2, .-PWM_RG_WriteCompare2
 201              		.section	.text.PWM_RG_SetInterruptMode,"ax",%progbits
 202              		.align	2
 203              		.global	PWM_RG_SetInterruptMode
 204              		.thumb
 205              		.thumb_func
 206              		.type	PWM_RG_SetInterruptMode, %function
 207              	PWM_RG_SetInterruptMode:
 208              	.LFB10:
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 15


 591:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (PWM_RG_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_RG.c ****     }
 593:Generated_Source\PSoC5/PWM_RG.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_RG.c **** 
 595:Generated_Source\PSoC5/PWM_RG.c **** #if (PWM_RG_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_RG.c **** 
 597:Generated_Source\PSoC5/PWM_RG.c **** 
 598:Generated_Source\PSoC5/PWM_RG.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_RG.c ****     * Function Name: PWM_RG_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_RG.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_RG.c ****     *
 602:Generated_Source\PSoC5/PWM_RG.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_RG.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_RG.c ****     *
 605:Generated_Source\PSoC5/PWM_RG.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_RG.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_RG.c ****     *
 608:Generated_Source\PSoC5/PWM_RG.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_RG.c ****     *  None
 610:Generated_Source\PSoC5/PWM_RG.c ****     *
 611:Generated_Source\PSoC5/PWM_RG.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_RG.c ****     void PWM_RG_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_RG.c ****     {
 614:Generated_Source\PSoC5/PWM_RG.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_RG.c ****         #if(!PWM_RG_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_RG.c ****             CY_SET_REG8(PWM_RG_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_RG.c ****         #else
 618:Generated_Source\PSoC5/PWM_RG.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_RG.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_RG.c ****             PWM_RG_DEADBAND_COUNT &= ((uint8)(~PWM_RG_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_RG.c **** 
 622:Generated_Source\PSoC5/PWM_RG.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_RG.c ****             #if(PWM_RG_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_RG.c ****                 PWM_RG_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_RG_DEADBAND_COUNT_SHIFT)) 
 625:Generated_Source\PSoC5/PWM_RG.c ****                                                     PWM_RG_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_RG.c ****             #else
 627:Generated_Source\PSoC5/PWM_RG.c ****                 PWM_RG_DEADBAND_COUNT |= deadtime & PWM_RG_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_RG.c ****             #endif /* (PWM_RG_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_RG.c **** 
 630:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (!PWM_RG_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_RG.c ****     }
 632:Generated_Source\PSoC5/PWM_RG.c **** 
 633:Generated_Source\PSoC5/PWM_RG.c **** 
 634:Generated_Source\PSoC5/PWM_RG.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_RG.c ****     * Function Name: PWM_RG_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_RG.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_RG.c ****     *
 638:Generated_Source\PSoC5/PWM_RG.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_RG.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_RG.c ****     *
 641:Generated_Source\PSoC5/PWM_RG.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_RG.c ****     *  None
 643:Generated_Source\PSoC5/PWM_RG.c ****     *
 644:Generated_Source\PSoC5/PWM_RG.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_RG.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_RG.c ****     *
 647:Generated_Source\PSoC5/PWM_RG.c ****     *******************************************************************************/
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 16


 648:Generated_Source\PSoC5/PWM_RG.c ****     uint8 PWM_RG_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_RG.c ****     {
 650:Generated_Source\PSoC5/PWM_RG.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_RG.c ****         #if(!PWM_RG_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_RG.c ****             return (CY_GET_REG8(PWM_RG_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_RG.c ****         #else
 654:Generated_Source\PSoC5/PWM_RG.c **** 
 655:Generated_Source\PSoC5/PWM_RG.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_RG.c ****             #if(PWM_RG_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_RG.c ****                 return ((uint8)(((uint8)(PWM_RG_DEADBAND_COUNT & PWM_RG_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC5/PWM_RG.c ****                                                                            PWM_RG_DEADBAND_COUNT_SH
 659:Generated_Source\PSoC5/PWM_RG.c ****             #else
 660:Generated_Source\PSoC5/PWM_RG.c ****                 return (PWM_RG_DEADBAND_COUNT & PWM_RG_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_RG.c ****             #endif /* (PWM_RG_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (!PWM_RG_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_RG.c ****     }
 664:Generated_Source\PSoC5/PWM_RG.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_RG.c **** 
 666:Generated_Source\PSoC5/PWM_RG.c **** #if (PWM_RG_UseStatus || PWM_RG_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_RG.c **** 
 668:Generated_Source\PSoC5/PWM_RG.c **** 
 669:Generated_Source\PSoC5/PWM_RG.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_RG.c ****     * Function Name: PWM_RG_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_RG.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_RG.c ****     *
 673:Generated_Source\PSoC5/PWM_RG.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_RG.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_RG.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_RG.c ****     *
 677:Generated_Source\PSoC5/PWM_RG.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_RG.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_RG.c ****     *
 680:Generated_Source\PSoC5/PWM_RG.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_RG.c ****     *  None
 682:Generated_Source\PSoC5/PWM_RG.c ****     *
 683:Generated_Source\PSoC5/PWM_RG.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_RG.c ****     void PWM_RG_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_RG.c ****     {
 209              		.loc 1 685 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214              	.LVL4:
 686:Generated_Source\PSoC5/PWM_RG.c ****         CY_SET_REG8(PWM_RG_STATUS_MASK_PTR, interruptMode);
 215              		.loc 1 686 0
 216 0000 014B     		ldr	r3, .L23
 217 0002 1870     		strb	r0, [r3]
 218 0004 7047     		bx	lr
 219              	.L24:
 220 0006 00BF     		.align	2
 221              	.L23:
 222 0008 87640040 		.word	1073767559
 223              		.cfi_endproc
 224              	.LFE10:
 225              		.size	PWM_RG_SetInterruptMode, .-PWM_RG_SetInterruptMode
 226              		.section	.text.PWM_RG_ReadStatusRegister,"ax",%progbits
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 17


 227              		.align	2
 228              		.global	PWM_RG_ReadStatusRegister
 229              		.thumb
 230              		.thumb_func
 231              		.type	PWM_RG_ReadStatusRegister, %function
 232              	PWM_RG_ReadStatusRegister:
 233              	.LFB11:
 687:Generated_Source\PSoC5/PWM_RG.c ****     }
 688:Generated_Source\PSoC5/PWM_RG.c **** 
 689:Generated_Source\PSoC5/PWM_RG.c **** 
 690:Generated_Source\PSoC5/PWM_RG.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_RG.c ****     * Function Name: PWM_RG_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_RG.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_RG.c ****     *
 694:Generated_Source\PSoC5/PWM_RG.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_RG.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_RG.c ****     *
 697:Generated_Source\PSoC5/PWM_RG.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_RG.c ****     *  None
 699:Generated_Source\PSoC5/PWM_RG.c ****     *
 700:Generated_Source\PSoC5/PWM_RG.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_RG.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_RG.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_RG.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_RG.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_RG.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_RG.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_RG.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_RG.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_RG.c ****     *
 710:Generated_Source\PSoC5/PWM_RG.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_RG.c ****     uint8 PWM_RG_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_RG.c ****     {
 234              		.loc 1 712 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 713:Generated_Source\PSoC5/PWM_RG.c ****         return (CY_GET_REG8(PWM_RG_STATUS_PTR));
 239              		.loc 1 713 0
 240 0000 014B     		ldr	r3, .L26
 241 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:Generated_Source\PSoC5/PWM_RG.c ****     }
 242              		.loc 1 714 0
 243 0004 7047     		bx	lr
 244              	.L27:
 245 0006 00BF     		.align	2
 246              	.L26:
 247 0008 67640040 		.word	1073767527
 248              		.cfi_endproc
 249              	.LFE11:
 250              		.size	PWM_RG_ReadStatusRegister, .-PWM_RG_ReadStatusRegister
 251              		.section	.text.PWM_RG_ReadControlRegister,"ax",%progbits
 252              		.align	2
 253              		.global	PWM_RG_ReadControlRegister
 254              		.thumb
 255              		.thumb_func
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 18


 256              		.type	PWM_RG_ReadControlRegister, %function
 257              	PWM_RG_ReadControlRegister:
 258              	.LFB12:
 715:Generated_Source\PSoC5/PWM_RG.c **** 
 716:Generated_Source\PSoC5/PWM_RG.c **** #endif /* (PWM_RG_UseStatus || PWM_RG_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_RG.c **** 
 718:Generated_Source\PSoC5/PWM_RG.c **** 
 719:Generated_Source\PSoC5/PWM_RG.c **** #if (PWM_RG_UseControl)
 720:Generated_Source\PSoC5/PWM_RG.c **** 
 721:Generated_Source\PSoC5/PWM_RG.c **** 
 722:Generated_Source\PSoC5/PWM_RG.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_RG.c ****     * Function Name: PWM_RG_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_RG.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_RG.c ****     *
 726:Generated_Source\PSoC5/PWM_RG.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_RG.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_RG.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_RG.c ****     *
 730:Generated_Source\PSoC5/PWM_RG.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_RG.c ****     *  None
 732:Generated_Source\PSoC5/PWM_RG.c ****     *
 733:Generated_Source\PSoC5/PWM_RG.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_RG.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_RG.c ****     *
 736:Generated_Source\PSoC5/PWM_RG.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_RG.c ****     uint8 PWM_RG_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_RG.c ****     {
 259              		.loc 1 738 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 739:Generated_Source\PSoC5/PWM_RG.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_RG.c **** 
 741:Generated_Source\PSoC5/PWM_RG.c ****         result = CY_GET_REG8(PWM_RG_CONTROL_PTR);
 264              		.loc 1 741 0
 265 0000 014B     		ldr	r3, .L29
 266 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 267              	.LVL5:
 742:Generated_Source\PSoC5/PWM_RG.c ****         return (result);
 743:Generated_Source\PSoC5/PWM_RG.c ****     }
 268              		.loc 1 743 0
 269 0004 7047     		bx	lr
 270              	.L30:
 271 0006 00BF     		.align	2
 272              	.L29:
 273 0008 74640040 		.word	1073767540
 274              		.cfi_endproc
 275              	.LFE12:
 276              		.size	PWM_RG_ReadControlRegister, .-PWM_RG_ReadControlRegister
 277              		.section	.text.PWM_RG_WriteControlRegister,"ax",%progbits
 278              		.align	2
 279              		.global	PWM_RG_WriteControlRegister
 280              		.thumb
 281              		.thumb_func
 282              		.type	PWM_RG_WriteControlRegister, %function
 283              	PWM_RG_WriteControlRegister:
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 19


 284              	.LFB13:
 744:Generated_Source\PSoC5/PWM_RG.c **** 
 745:Generated_Source\PSoC5/PWM_RG.c **** 
 746:Generated_Source\PSoC5/PWM_RG.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_RG.c ****     * Function Name: PWM_RG_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_RG.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_RG.c ****     *
 750:Generated_Source\PSoC5/PWM_RG.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_RG.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_RG.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_RG.c ****     *
 754:Generated_Source\PSoC5/PWM_RG.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_RG.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_RG.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_RG.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_RG.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_RG.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_RG.c ****     *
 761:Generated_Source\PSoC5/PWM_RG.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_RG.c ****     *  None
 763:Generated_Source\PSoC5/PWM_RG.c ****     *
 764:Generated_Source\PSoC5/PWM_RG.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_RG.c ****     void PWM_RG_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM_RG.c ****     {
 285              		.loc 1 766 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 290              	.LVL6:
 767:Generated_Source\PSoC5/PWM_RG.c ****         CY_SET_REG8(PWM_RG_CONTROL_PTR, control);
 291              		.loc 1 767 0
 292 0000 014B     		ldr	r3, .L32
 293 0002 1870     		strb	r0, [r3]
 294 0004 7047     		bx	lr
 295              	.L33:
 296 0006 00BF     		.align	2
 297              	.L32:
 298 0008 74640040 		.word	1073767540
 299              		.cfi_endproc
 300              	.LFE13:
 301              		.size	PWM_RG_WriteControlRegister, .-PWM_RG_WriteControlRegister
 302              		.section	.text.PWM_RG_ReadCapture,"ax",%progbits
 303              		.align	2
 304              		.global	PWM_RG_ReadCapture
 305              		.thumb
 306              		.thumb_func
 307              		.type	PWM_RG_ReadCapture, %function
 308              	PWM_RG_ReadCapture:
 309              	.LFB14:
 768:Generated_Source\PSoC5/PWM_RG.c ****     }
 769:Generated_Source\PSoC5/PWM_RG.c **** 
 770:Generated_Source\PSoC5/PWM_RG.c **** #endif /* (PWM_RG_UseControl) */
 771:Generated_Source\PSoC5/PWM_RG.c **** 
 772:Generated_Source\PSoC5/PWM_RG.c **** 
 773:Generated_Source\PSoC5/PWM_RG.c **** #if (!PWM_RG_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_RG.c **** 
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 20


 775:Generated_Source\PSoC5/PWM_RG.c **** 
 776:Generated_Source\PSoC5/PWM_RG.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_RG.c ****     * Function Name: PWM_RG_ReadCapture
 778:Generated_Source\PSoC5/PWM_RG.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_RG.c ****     *
 780:Generated_Source\PSoC5/PWM_RG.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_RG.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_RG.c ****     *
 783:Generated_Source\PSoC5/PWM_RG.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_RG.c ****     *  None
 785:Generated_Source\PSoC5/PWM_RG.c ****     *
 786:Generated_Source\PSoC5/PWM_RG.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_RG.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_RG.c ****     *
 789:Generated_Source\PSoC5/PWM_RG.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_RG.c ****     uint8 PWM_RG_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_RG.c ****     {
 310              		.loc 1 791 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 792:Generated_Source\PSoC5/PWM_RG.c ****         return (CY_GET_REG8(PWM_RG_CAPTURE_LSB_PTR));
 315              		.loc 1 792 0
 316 0000 014B     		ldr	r3, .L35
 317 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 793:Generated_Source\PSoC5/PWM_RG.c ****     }
 318              		.loc 1 793 0
 319 0004 7047     		bx	lr
 320              	.L36:
 321 0006 00BF     		.align	2
 322              	.L35:
 323 0008 54640040 		.word	1073767508
 324              		.cfi_endproc
 325              	.LFE14:
 326              		.size	PWM_RG_ReadCapture, .-PWM_RG_ReadCapture
 327              		.section	.text.PWM_RG_ClearFIFO,"ax",%progbits
 328              		.align	2
 329              		.global	PWM_RG_ClearFIFO
 330              		.thumb
 331              		.thumb_func
 332              		.type	PWM_RG_ClearFIFO, %function
 333              	PWM_RG_ClearFIFO:
 334              	.LFB6:
 454:Generated_Source\PSoC5/PWM_RG.c ****             while(0u != (PWM_RG_ReadStatusRegister() & PWM_RG_STATUS_FIFONEMPTY))
 335              		.loc 1 454 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339 0000 08B5     		push	{r3, lr}
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 3, -8
 342              		.cfi_offset 14, -4
 455:Generated_Source\PSoC5/PWM_RG.c ****             {
 343              		.loc 1 455 0
 344 0002 01E0     		b	.L38
 345              	.L39:
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 21


 457:Generated_Source\PSoC5/PWM_RG.c ****             }
 346              		.loc 1 457 0
 347 0004 FFF7FEFF 		bl	PWM_RG_ReadCapture
 348              	.LVL7:
 349              	.L38:
 455:Generated_Source\PSoC5/PWM_RG.c ****             {
 350              		.loc 1 455 0
 351 0008 FFF7FEFF 		bl	PWM_RG_ReadStatusRegister
 352              	.LVL8:
 353 000c 10F0100F 		tst	r0, #16
 354 0010 F8D1     		bne	.L39
 459:Generated_Source\PSoC5/PWM_RG.c **** 
 355              		.loc 1 459 0
 356 0012 08BD     		pop	{r3, pc}
 357              		.cfi_endproc
 358              	.LFE6:
 359              		.size	PWM_RG_ClearFIFO, .-PWM_RG_ClearFIFO
 360              		.section	.text.PWM_RG_Init,"ax",%progbits
 361              		.align	2
 362              		.global	PWM_RG_Init
 363              		.thumb
 364              		.thumb_func
 365              		.type	PWM_RG_Init, %function
 366              	PWM_RG_Init:
 367              	.LFB1:
  85:Generated_Source\PSoC5/PWM_RG.c ****     #if (PWM_RG_UsingFixedFunction || PWM_RG_UseControl)
 368              		.loc 1 85 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 08B5     		push	{r3, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 3, -8
 375              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/PWM_RG.c ****                 ((uint8)(~PWM_RG_CTRL_CMPMODE1_MASK));
 376              		.loc 1 117 0
 377 0002 134A     		ldr	r2, .L43
 378 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 379 0006 03F0C003 		and	r3, r3, #192
 380              	.LVL9:
 119:Generated_Source\PSoC5/PWM_RG.c ****                                    PWM_RG_DEFAULT_COMPARE1_MODE;
 381              		.loc 1 119 0
 382 000a 43F00903 		orr	r3, r3, #9
 383              	.LVL10:
 384 000e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/PWM_RG.c ****         #else /* (PWM_RG_Resolution == 16)*/
 385              		.loc 1 126 0
 386 0010 2032     		adds	r2, r2, #32
 387 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 388 0014 43F00103 		orr	r3, r3, #1
 389 0018 1370     		strb	r3, [r2]
 133:Generated_Source\PSoC5/PWM_RG.c ****     #endif /* (!PWM_RG_UsingFixedFunction) */
 390              		.loc 1 133 0
 391 001a FF20     		movs	r0, #255
 392 001c FFF7FEFF 		bl	PWM_RG_WriteCounter
 393              	.LVL11:
 136:Generated_Source\PSoC5/PWM_RG.c **** 
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 22


 394              		.loc 1 136 0
 395 0020 FF20     		movs	r0, #255
 396 0022 FFF7FEFF 		bl	PWM_RG_WritePeriod
 397              	.LVL12:
 141:Generated_Source\PSoC5/PWM_RG.c ****             PWM_RG_WriteCompare2(PWM_RG_INIT_COMPARE_VALUE2);
 398              		.loc 1 141 0
 399 0026 7F20     		movs	r0, #127
 400 0028 FFF7FEFF 		bl	PWM_RG_WriteCompare1
 401              	.LVL13:
 142:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (PWM_RG_UseOneCompareMode) */
 402              		.loc 1 142 0
 403 002c 3F20     		movs	r0, #63
 404 002e FFF7FEFF 		bl	PWM_RG_WriteCompare2
 405              	.LVL14:
 154:Generated_Source\PSoC5/PWM_RG.c ****     #endif /* (PWM_RG_UseStatus || PWM_RG_UsingFixedFunction) */
 406              		.loc 1 154 0
 407 0032 0020     		movs	r0, #0
 408 0034 FFF7FEFF 		bl	PWM_RG_SetInterruptMode
 409              	.LVL15:
 167:Generated_Source\PSoC5/PWM_RG.c ****             /* Use the interrupt output of the status register for IRQ output */
 410              		.loc 1 167 0
 411 0038 FFF7FEFF 		bl	CyEnterCriticalSection
 412              	.LVL16:
 169:Generated_Source\PSoC5/PWM_RG.c **** 
 413              		.loc 1 169 0
 414 003c 054A     		ldr	r2, .L43+4
 415 003e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 416 0040 43F01003 		orr	r3, r3, #16
 417 0044 1370     		strb	r3, [r2]
 172:Generated_Source\PSoC5/PWM_RG.c **** 
 418              		.loc 1 172 0
 419 0046 FFF7FEFF 		bl	CyExitCriticalSection
 420              	.LVL17:
 176:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (PWM_RG_UseStatus) */
 421              		.loc 1 176 0
 422 004a FFF7FEFF 		bl	PWM_RG_ClearFIFO
 423              	.LVL18:
 424 004e 08BD     		pop	{r3, pc}
 425              	.L44:
 426              		.align	2
 427              	.L43:
 428 0050 74640040 		.word	1073767540
 429 0054 97640040 		.word	1073767575
 430              		.cfi_endproc
 431              	.LFE1:
 432              		.size	PWM_RG_Init, .-PWM_RG_Init
 433              		.section	.text.PWM_RG_Start,"ax",%progbits
 434              		.align	2
 435              		.global	PWM_RG_Start
 436              		.thumb
 437              		.thumb_func
 438              		.type	PWM_RG_Start, %function
 439              	PWM_RG_Start:
 440              	.LFB0:
  56:Generated_Source\PSoC5/PWM_RG.c ****     /* If not Initialized then initialize all required hardware and software */
 441              		.loc 1 56 0
 442              		.cfi_startproc
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 23


 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445 0000 08B5     		push	{r3, lr}
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 3, -8
 448              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/PWM_RG.c ****     {
 449              		.loc 1 58 0
 450 0002 054B     		ldr	r3, .L48
 451 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 452 0006 23B9     		cbnz	r3, .L46
  60:Generated_Source\PSoC5/PWM_RG.c ****         PWM_RG_initVar = 1u;
 453              		.loc 1 60 0
 454 0008 FFF7FEFF 		bl	PWM_RG_Init
 455              	.LVL19:
  61:Generated_Source\PSoC5/PWM_RG.c ****     }
 456              		.loc 1 61 0
 457 000c 0122     		movs	r2, #1
 458 000e 024B     		ldr	r3, .L48
 459 0010 1A70     		strb	r2, [r3]
 460              	.L46:
  63:Generated_Source\PSoC5/PWM_RG.c **** 
 461              		.loc 1 63 0
 462 0012 FFF7FEFF 		bl	PWM_RG_Enable
 463              	.LVL20:
 464 0016 08BD     		pop	{r3, pc}
 465              	.L49:
 466              		.align	2
 467              	.L48:
 468 0018 00000000 		.word	.LANCHOR0
 469              		.cfi_endproc
 470              	.LFE0:
 471              		.size	PWM_RG_Start, .-PWM_RG_Start
 472              		.section	.text.PWM_RG_ReadCompare1,"ax",%progbits
 473              		.align	2
 474              		.global	PWM_RG_ReadCompare1
 475              		.thumb
 476              		.thumb_func
 477              		.type	PWM_RG_ReadCompare1, %function
 478              	PWM_RG_ReadCompare1:
 479              	.LFB15:
 794:Generated_Source\PSoC5/PWM_RG.c **** 
 795:Generated_Source\PSoC5/PWM_RG.c **** #endif /* (!PWM_RG_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_RG.c **** 
 797:Generated_Source\PSoC5/PWM_RG.c **** 
 798:Generated_Source\PSoC5/PWM_RG.c **** #if (PWM_RG_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_RG.c **** 
 800:Generated_Source\PSoC5/PWM_RG.c **** 
 801:Generated_Source\PSoC5/PWM_RG.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_RG.c ****     * Function Name: PWM_RG_ReadCompare
 803:Generated_Source\PSoC5/PWM_RG.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_RG.c ****     *
 805:Generated_Source\PSoC5/PWM_RG.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_RG.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_RG.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_RG.c ****     *
 809:Generated_Source\PSoC5/PWM_RG.c ****     * Parameters:
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 24


 810:Generated_Source\PSoC5/PWM_RG.c ****     *  None
 811:Generated_Source\PSoC5/PWM_RG.c ****     *
 812:Generated_Source\PSoC5/PWM_RG.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_RG.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_RG.c ****     *
 815:Generated_Source\PSoC5/PWM_RG.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_RG.c ****     uint8 PWM_RG_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_RG.c ****     {
 818:Generated_Source\PSoC5/PWM_RG.c ****         #if(PWM_RG_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_RG.c ****             return ((uint8)CY_GET_REG16(PWM_RG_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM_RG.c ****         #else
 821:Generated_Source\PSoC5/PWM_RG.c ****             return (CY_GET_REG8(PWM_RG_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/PWM_RG.c ****         #endif /* (PWM_RG_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_RG.c ****     }
 824:Generated_Source\PSoC5/PWM_RG.c **** 
 825:Generated_Source\PSoC5/PWM_RG.c **** #else
 826:Generated_Source\PSoC5/PWM_RG.c **** 
 827:Generated_Source\PSoC5/PWM_RG.c **** 
 828:Generated_Source\PSoC5/PWM_RG.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_RG.c ****     * Function Name: PWM_RG_ReadCompare1
 830:Generated_Source\PSoC5/PWM_RG.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_RG.c ****     *
 832:Generated_Source\PSoC5/PWM_RG.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_RG.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_RG.c ****     *
 835:Generated_Source\PSoC5/PWM_RG.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_RG.c ****     *  None
 837:Generated_Source\PSoC5/PWM_RG.c ****     *
 838:Generated_Source\PSoC5/PWM_RG.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_RG.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_RG.c ****     *
 841:Generated_Source\PSoC5/PWM_RG.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_RG.c ****     uint8 PWM_RG_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_RG.c ****     {
 480              		.loc 1 843 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 844:Generated_Source\PSoC5/PWM_RG.c ****         return (CY_GET_REG8(PWM_RG_COMPARE1_LSB_PTR));
 485              		.loc 1 844 0
 486 0000 014B     		ldr	r3, .L51
 487 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 845:Generated_Source\PSoC5/PWM_RG.c ****     }
 488              		.loc 1 845 0
 489 0004 7047     		bx	lr
 490              	.L52:
 491 0006 00BF     		.align	2
 492              	.L51:
 493 0008 24640040 		.word	1073767460
 494              		.cfi_endproc
 495              	.LFE15:
 496              		.size	PWM_RG_ReadCompare1, .-PWM_RG_ReadCompare1
 497              		.section	.text.PWM_RG_ReadCompare2,"ax",%progbits
 498              		.align	2
 499              		.global	PWM_RG_ReadCompare2
 500              		.thumb
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 25


 501              		.thumb_func
 502              		.type	PWM_RG_ReadCompare2, %function
 503              	PWM_RG_ReadCompare2:
 504              	.LFB16:
 846:Generated_Source\PSoC5/PWM_RG.c **** 
 847:Generated_Source\PSoC5/PWM_RG.c **** 
 848:Generated_Source\PSoC5/PWM_RG.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_RG.c ****     * Function Name: PWM_RG_ReadCompare2
 850:Generated_Source\PSoC5/PWM_RG.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_RG.c ****     *
 852:Generated_Source\PSoC5/PWM_RG.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_RG.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_RG.c ****     *
 855:Generated_Source\PSoC5/PWM_RG.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_RG.c ****     *  None
 857:Generated_Source\PSoC5/PWM_RG.c ****     *
 858:Generated_Source\PSoC5/PWM_RG.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_RG.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_RG.c ****     *
 861:Generated_Source\PSoC5/PWM_RG.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_RG.c ****     uint8 PWM_RG_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_RG.c ****     {
 505              		.loc 1 863 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 864:Generated_Source\PSoC5/PWM_RG.c ****         return (CY_GET_REG8(PWM_RG_COMPARE2_LSB_PTR));
 510              		.loc 1 864 0
 511 0000 014B     		ldr	r3, .L54
 512 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 865:Generated_Source\PSoC5/PWM_RG.c ****     }
 513              		.loc 1 865 0
 514 0004 7047     		bx	lr
 515              	.L55:
 516 0006 00BF     		.align	2
 517              	.L54:
 518 0008 34640040 		.word	1073767476
 519              		.cfi_endproc
 520              	.LFE16:
 521              		.size	PWM_RG_ReadCompare2, .-PWM_RG_ReadCompare2
 522              		.section	.text.PWM_RG_ReadPeriod,"ax",%progbits
 523              		.align	2
 524              		.global	PWM_RG_ReadPeriod
 525              		.thumb
 526              		.thumb_func
 527              		.type	PWM_RG_ReadPeriod, %function
 528              	PWM_RG_ReadPeriod:
 529              	.LFB17:
 866:Generated_Source\PSoC5/PWM_RG.c **** 
 867:Generated_Source\PSoC5/PWM_RG.c **** #endif /* (PWM_RG_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_RG.c **** 
 869:Generated_Source\PSoC5/PWM_RG.c **** 
 870:Generated_Source\PSoC5/PWM_RG.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_RG.c **** * Function Name: PWM_RG_ReadPeriod
 872:Generated_Source\PSoC5/PWM_RG.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_RG.c **** *
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 26


 874:Generated_Source\PSoC5/PWM_RG.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_RG.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_RG.c **** *
 877:Generated_Source\PSoC5/PWM_RG.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_RG.c **** *  None
 879:Generated_Source\PSoC5/PWM_RG.c **** *
 880:Generated_Source\PSoC5/PWM_RG.c **** * Return:
 881:Generated_Source\PSoC5/PWM_RG.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_RG.c **** *
 883:Generated_Source\PSoC5/PWM_RG.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_RG.c **** uint8 PWM_RG_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_RG.c **** {
 530              		.loc 1 885 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 886:Generated_Source\PSoC5/PWM_RG.c ****     #if(PWM_RG_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_RG.c ****         return ((uint8)CY_GET_REG16(PWM_RG_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_RG.c ****     #else
 889:Generated_Source\PSoC5/PWM_RG.c ****         return (CY_GET_REG8(PWM_RG_PERIOD_LSB_PTR));
 535              		.loc 1 889 0
 536 0000 014B     		ldr	r3, .L57
 537 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 890:Generated_Source\PSoC5/PWM_RG.c ****     #endif /* (PWM_RG_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_RG.c **** }
 538              		.loc 1 891 0
 539 0004 7047     		bx	lr
 540              	.L58:
 541 0006 00BF     		.align	2
 542              	.L57:
 543 0008 44640040 		.word	1073767492
 544              		.cfi_endproc
 545              	.LFE17:
 546              		.size	PWM_RG_ReadPeriod, .-PWM_RG_ReadPeriod
 547              		.global	PWM_RG_initVar
 548              		.bss
 549              		.set	.LANCHOR0,. + 0
 550              		.type	PWM_RG_initVar, %object
 551              		.size	PWM_RG_initVar, 1
 552              	PWM_RG_initVar:
 553 0000 00       		.space	1
 554              		.text
 555              	.Letext0:
 556              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 557              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 558              		.section	.debug_info,"",%progbits
 559              	.Ldebug_info0:
 560 0000 7F030000 		.4byte	0x37f
 561 0004 0400     		.2byte	0x4
 562 0006 00000000 		.4byte	.Ldebug_abbrev0
 563 000a 04       		.byte	0x4
 564 000b 01       		.uleb128 0x1
 565 000c BD000000 		.4byte	.LASF43
 566 0010 0C       		.byte	0xc
 567 0011 88020000 		.4byte	.LASF44
 568 0015 DF020000 		.4byte	.LASF45
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 27


 569 0019 00000000 		.4byte	.Ldebug_ranges0+0
 570 001d 00000000 		.4byte	0
 571 0021 00000000 		.4byte	.Ldebug_line0
 572 0025 02       		.uleb128 0x2
 573 0026 01       		.byte	0x1
 574 0027 06       		.byte	0x6
 575 0028 B1030000 		.4byte	.LASF0
 576 002c 02       		.uleb128 0x2
 577 002d 01       		.byte	0x1
 578 002e 08       		.byte	0x8
 579 002f AF000000 		.4byte	.LASF1
 580 0033 02       		.uleb128 0x2
 581 0034 02       		.byte	0x2
 582 0035 05       		.byte	0x5
 583 0036 D5020000 		.4byte	.LASF2
 584 003a 02       		.uleb128 0x2
 585 003b 02       		.byte	0x2
 586 003c 07       		.byte	0x7
 587 003d 3B000000 		.4byte	.LASF3
 588 0041 02       		.uleb128 0x2
 589 0042 04       		.byte	0x4
 590 0043 05       		.byte	0x5
 591 0044 97030000 		.4byte	.LASF4
 592 0048 02       		.uleb128 0x2
 593 0049 04       		.byte	0x4
 594 004a 07       		.byte	0x7
 595 004b 5C010000 		.4byte	.LASF5
 596 004f 02       		.uleb128 0x2
 597 0050 08       		.byte	0x8
 598 0051 05       		.byte	0x5
 599 0052 A8020000 		.4byte	.LASF6
 600 0056 02       		.uleb128 0x2
 601 0057 08       		.byte	0x8
 602 0058 07       		.byte	0x7
 603 0059 98000000 		.4byte	.LASF7
 604 005d 03       		.uleb128 0x3
 605 005e 04       		.byte	0x4
 606 005f 05       		.byte	0x5
 607 0060 696E7400 		.ascii	"int\000"
 608 0064 02       		.uleb128 0x2
 609 0065 04       		.byte	0x4
 610 0066 07       		.byte	0x7
 611 0067 E6010000 		.4byte	.LASF8
 612 006b 04       		.uleb128 0x4
 613 006c 7B010000 		.4byte	.LASF12
 614 0070 02       		.byte	0x2
 615 0071 E401     		.2byte	0x1e4
 616 0073 2C000000 		.4byte	0x2c
 617 0077 02       		.uleb128 0x2
 618 0078 04       		.byte	0x4
 619 0079 04       		.byte	0x4
 620 007a 8A000000 		.4byte	.LASF9
 621 007e 02       		.uleb128 0x2
 622 007f 08       		.byte	0x8
 623 0080 04       		.byte	0x4
 624 0081 89010000 		.4byte	.LASF10
 625 0085 02       		.uleb128 0x2
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 28


 626 0086 01       		.byte	0x1
 627 0087 08       		.byte	0x8
 628 0088 A0030000 		.4byte	.LASF11
 629 008c 04       		.uleb128 0x4
 630 008d 4B010000 		.4byte	.LASF13
 631 0091 02       		.byte	0x2
 632 0092 8E02     		.2byte	0x28e
 633 0094 98000000 		.4byte	0x98
 634 0098 05       		.uleb128 0x5
 635 0099 6B000000 		.4byte	0x6b
 636 009d 02       		.uleb128 0x2
 637 009e 08       		.byte	0x8
 638 009f 04       		.byte	0x4
 639 00a0 A5030000 		.4byte	.LASF14
 640 00a4 02       		.uleb128 0x2
 641 00a5 04       		.byte	0x4
 642 00a6 07       		.byte	0x7
 643 00a7 69020000 		.4byte	.LASF15
 644 00ab 06       		.uleb128 0x6
 645 00ac 1A000000 		.4byte	.LASF16
 646 00b0 01       		.byte	0x1
 647 00b1 C7       		.byte	0xc7
 648 00b2 00000000 		.4byte	.LFB2
 649 00b6 10000000 		.4byte	.LFE2-.LFB2
 650 00ba 01       		.uleb128 0x1
 651 00bb 9C       		.byte	0x9c
 652 00bc 06       		.uleb128 0x6
 653 00bd 28000000 		.4byte	.LASF17
 654 00c1 01       		.byte	0x1
 655 00c2 E9       		.byte	0xe9
 656 00c3 00000000 		.4byte	.LFB3
 657 00c7 10000000 		.4byte	.LFE3-.LFB3
 658 00cb 01       		.uleb128 0x1
 659 00cc 9C       		.byte	0x9c
 660 00cd 07       		.uleb128 0x7
 661 00ce BB010000 		.4byte	.LASF18
 662 00d2 01       		.byte	0x1
 663 00d3 9301     		.2byte	0x193
 664 00d5 00000000 		.4byte	.LFB4
 665 00d9 0C000000 		.4byte	.LFE4-.LFB4
 666 00dd 01       		.uleb128 0x1
 667 00de 9C       		.byte	0x9c
 668 00df F2000000 		.4byte	0xf2
 669 00e3 08       		.uleb128 0x8
 670 00e4 90000000 		.4byte	.LASF20
 671 00e8 01       		.byte	0x1
 672 00e9 9301     		.2byte	0x193
 673 00eb 6B000000 		.4byte	0x6b
 674 00ef 01       		.uleb128 0x1
 675 00f0 50       		.byte	0x50
 676 00f1 00       		.byte	0
 677 00f2 09       		.uleb128 0x9
 678 00f3 62000000 		.4byte	.LASF27
 679 00f7 01       		.byte	0x1
 680 00f8 A901     		.2byte	0x1a9
 681 00fa 6B000000 		.4byte	0x6b
 682 00fe 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 29


 683 0102 14000000 		.4byte	.LFE5-.LFB5
 684 0106 01       		.uleb128 0x1
 685 0107 9C       		.byte	0x9c
 686 0108 07       		.uleb128 0x7
 687 0109 A8010000 		.4byte	.LASF19
 688 010d 01       		.byte	0x1
 689 010e E201     		.2byte	0x1e2
 690 0110 00000000 		.4byte	.LFB7
 691 0114 0C000000 		.4byte	.LFE7-.LFB7
 692 0118 01       		.uleb128 0x1
 693 0119 9C       		.byte	0x9c
 694 011a 2D010000 		.4byte	0x12d
 695 011e 08       		.uleb128 0x8
 696 011f 34000000 		.4byte	.LASF21
 697 0123 01       		.byte	0x1
 698 0124 E201     		.2byte	0x1e2
 699 0126 6B000000 		.4byte	0x6b
 700 012a 01       		.uleb128 0x1
 701 012b 50       		.byte	0x50
 702 012c 00       		.byte	0
 703 012d 07       		.uleb128 0x7
 704 012e C5030000 		.4byte	.LASF22
 705 0132 01       		.byte	0x1
 706 0133 2B02     		.2byte	0x22b
 707 0135 00000000 		.4byte	.LFB8
 708 0139 0C000000 		.4byte	.LFE8-.LFB8
 709 013d 01       		.uleb128 0x1
 710 013e 9C       		.byte	0x9c
 711 013f 52010000 		.4byte	0x152
 712 0143 08       		.uleb128 0x8
 713 0144 BD030000 		.4byte	.LASF23
 714 0148 01       		.byte	0x1
 715 0149 2B02     		.2byte	0x22b
 716 014b 6B000000 		.4byte	0x6b
 717 014f 01       		.uleb128 0x1
 718 0150 50       		.byte	0x50
 719 0151 00       		.byte	0
 720 0152 07       		.uleb128 0x7
 721 0153 75000000 		.4byte	.LASF24
 722 0157 01       		.byte	0x1
 723 0158 4802     		.2byte	0x248
 724 015a 00000000 		.4byte	.LFB9
 725 015e 0C000000 		.4byte	.LFE9-.LFB9
 726 0162 01       		.uleb128 0x1
 727 0163 9C       		.byte	0x9c
 728 0164 77010000 		.4byte	0x177
 729 0168 08       		.uleb128 0x8
 730 0169 BD030000 		.4byte	.LASF23
 731 016d 01       		.byte	0x1
 732 016e 4802     		.2byte	0x248
 733 0170 6B000000 		.4byte	0x6b
 734 0174 01       		.uleb128 0x1
 735 0175 50       		.byte	0x50
 736 0176 00       		.byte	0
 737 0177 07       		.uleb128 0x7
 738 0178 90010000 		.4byte	.LASF25
 739 017c 01       		.byte	0x1
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 30


 740 017d AC02     		.2byte	0x2ac
 741 017f 00000000 		.4byte	.LFB10
 742 0183 0C000000 		.4byte	.LFE10-.LFB10
 743 0187 01       		.uleb128 0x1
 744 0188 9C       		.byte	0x9c
 745 0189 9C010000 		.4byte	0x19c
 746 018d 08       		.uleb128 0x8
 747 018e B6020000 		.4byte	.LASF26
 748 0192 01       		.byte	0x1
 749 0193 AC02     		.2byte	0x2ac
 750 0195 6B000000 		.4byte	0x6b
 751 0199 01       		.uleb128 0x1
 752 019a 50       		.byte	0x50
 753 019b 00       		.byte	0
 754 019c 09       		.uleb128 0x9
 755 019d 38020000 		.4byte	.LASF28
 756 01a1 01       		.byte	0x1
 757 01a2 C702     		.2byte	0x2c7
 758 01a4 6B000000 		.4byte	0x6b
 759 01a8 00000000 		.4byte	.LFB11
 760 01ac 0C000000 		.4byte	.LFE11-.LFB11
 761 01b0 01       		.uleb128 0x1
 762 01b1 9C       		.byte	0x9c
 763 01b2 0A       		.uleb128 0xa
 764 01b3 1D020000 		.4byte	.LASF46
 765 01b7 01       		.byte	0x1
 766 01b8 E102     		.2byte	0x2e1
 767 01ba 6B000000 		.4byte	0x6b
 768 01be 00000000 		.4byte	.LFB12
 769 01c2 0C000000 		.4byte	.LFE12-.LFB12
 770 01c6 01       		.uleb128 0x1
 771 01c7 9C       		.byte	0x9c
 772 01c8 DB010000 		.4byte	0x1db
 773 01cc 0B       		.uleb128 0xb
 774 01cd 13000000 		.4byte	.LASF34
 775 01d1 01       		.byte	0x1
 776 01d2 E302     		.2byte	0x2e3
 777 01d4 6B000000 		.4byte	0x6b
 778 01d8 01       		.uleb128 0x1
 779 01d9 50       		.byte	0x50
 780 01da 00       		.byte	0
 781 01db 07       		.uleb128 0x7
 782 01dc 7B030000 		.4byte	.LASF29
 783 01e0 01       		.byte	0x1
 784 01e1 FD02     		.2byte	0x2fd
 785 01e3 00000000 		.4byte	.LFB13
 786 01e7 0C000000 		.4byte	.LFE13-.LFB13
 787 01eb 01       		.uleb128 0x1
 788 01ec 9C       		.byte	0x9c
 789 01ed 00020000 		.4byte	0x200
 790 01f1 08       		.uleb128 0x8
 791 01f2 81010000 		.4byte	.LASF30
 792 01f6 01       		.byte	0x1
 793 01f7 FD02     		.2byte	0x2fd
 794 01f9 6B000000 		.4byte	0x6b
 795 01fd 01       		.uleb128 0x1
 796 01fe 50       		.byte	0x50
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 31


 797 01ff 00       		.byte	0
 798 0200 09       		.uleb128 0x9
 799 0201 00000000 		.4byte	.LASF31
 800 0205 01       		.byte	0x1
 801 0206 1603     		.2byte	0x316
 802 0208 6B000000 		.4byte	0x6b
 803 020c 00000000 		.4byte	.LFB14
 804 0210 0C000000 		.4byte	.LFE14-.LFB14
 805 0214 01       		.uleb128 0x1
 806 0215 9C       		.byte	0x9c
 807 0216 07       		.uleb128 0x7
 808 0217 C4020000 		.4byte	.LASF32
 809 021b 01       		.byte	0x1
 810 021c C501     		.2byte	0x1c5
 811 021e 00000000 		.4byte	.LFB6
 812 0222 14000000 		.4byte	.LFE6-.LFB6
 813 0226 01       		.uleb128 0x1
 814 0227 9C       		.byte	0x9c
 815 0228 3F020000 		.4byte	0x23f
 816 022c 0C       		.uleb128 0xc
 817 022d 08000000 		.4byte	.LVL7
 818 0231 00020000 		.4byte	0x200
 819 0235 0C       		.uleb128 0xc
 820 0236 0C000000 		.4byte	.LVL8
 821 023a 9C010000 		.4byte	0x19c
 822 023e 00       		.byte	0
 823 023f 0D       		.uleb128 0xd
 824 0240 50010000 		.4byte	.LASF33
 825 0244 01       		.byte	0x1
 826 0245 54       		.byte	0x54
 827 0246 00000000 		.4byte	.LFB1
 828 024a 58000000 		.4byte	.LFE1-.LFB1
 829 024e 01       		.uleb128 0x1
 830 024f 9C       		.byte	0x9c
 831 0250 F1020000 		.4byte	0x2f1
 832 0254 0E       		.uleb128 0xe
 833 0255 64020000 		.4byte	.LASF35
 834 0259 01       		.byte	0x1
 835 025a 57       		.byte	0x57
 836 025b 6B000000 		.4byte	0x6b
 837 025f 00000000 		.4byte	.LLST0
 838 0263 0E       		.uleb128 0xe
 839 0264 72020000 		.4byte	.LASF36
 840 0268 01       		.byte	0x1
 841 0269 5D       		.byte	0x5d
 842 026a 6B000000 		.4byte	0x6b
 843 026e 13000000 		.4byte	.LLST1
 844 0272 0F       		.uleb128 0xf
 845 0273 20000000 		.4byte	.LVL11
 846 0277 CD000000 		.4byte	0xcd
 847 027b 86020000 		.4byte	0x286
 848 027f 10       		.uleb128 0x10
 849 0280 01       		.uleb128 0x1
 850 0281 50       		.byte	0x50
 851 0282 02       		.uleb128 0x2
 852 0283 09       		.byte	0x9
 853 0284 FF       		.byte	0xff
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 32


 854 0285 00       		.byte	0
 855 0286 0F       		.uleb128 0xf
 856 0287 26000000 		.4byte	.LVL12
 857 028b 08010000 		.4byte	0x108
 858 028f 9A020000 		.4byte	0x29a
 859 0293 10       		.uleb128 0x10
 860 0294 01       		.uleb128 0x1
 861 0295 50       		.byte	0x50
 862 0296 02       		.uleb128 0x2
 863 0297 09       		.byte	0x9
 864 0298 FF       		.byte	0xff
 865 0299 00       		.byte	0
 866 029a 0F       		.uleb128 0xf
 867 029b 2C000000 		.4byte	.LVL13
 868 029f 2D010000 		.4byte	0x12d
 869 02a3 AE020000 		.4byte	0x2ae
 870 02a7 10       		.uleb128 0x10
 871 02a8 01       		.uleb128 0x1
 872 02a9 50       		.byte	0x50
 873 02aa 02       		.uleb128 0x2
 874 02ab 08       		.byte	0x8
 875 02ac 7F       		.byte	0x7f
 876 02ad 00       		.byte	0
 877 02ae 0F       		.uleb128 0xf
 878 02af 32000000 		.4byte	.LVL14
 879 02b3 52010000 		.4byte	0x152
 880 02b7 C2020000 		.4byte	0x2c2
 881 02bb 10       		.uleb128 0x10
 882 02bc 01       		.uleb128 0x1
 883 02bd 50       		.byte	0x50
 884 02be 02       		.uleb128 0x2
 885 02bf 08       		.byte	0x8
 886 02c0 3F       		.byte	0x3f
 887 02c1 00       		.byte	0
 888 02c2 0F       		.uleb128 0xf
 889 02c3 38000000 		.4byte	.LVL15
 890 02c7 77010000 		.4byte	0x177
 891 02cb D5020000 		.4byte	0x2d5
 892 02cf 10       		.uleb128 0x10
 893 02d0 01       		.uleb128 0x1
 894 02d1 50       		.byte	0x50
 895 02d2 01       		.uleb128 0x1
 896 02d3 30       		.byte	0x30
 897 02d4 00       		.byte	0
 898 02d5 0C       		.uleb128 0xc
 899 02d6 3C000000 		.4byte	.LVL16
 900 02da 6C030000 		.4byte	0x36c
 901 02de 0C       		.uleb128 0xc
 902 02df 4A000000 		.4byte	.LVL17
 903 02e3 77030000 		.4byte	0x377
 904 02e7 0C       		.uleb128 0xc
 905 02e8 4E000000 		.4byte	.LVL18
 906 02ec 16020000 		.4byte	0x216
 907 02f0 00       		.byte	0
 908 02f1 0D       		.uleb128 0xd
 909 02f2 6E010000 		.4byte	.LASF37
 910 02f6 01       		.byte	0x1
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 33


 911 02f7 37       		.byte	0x37
 912 02f8 00000000 		.4byte	.LFB0
 913 02fc 1C000000 		.4byte	.LFE0-.LFB0
 914 0300 01       		.uleb128 0x1
 915 0301 9C       		.byte	0x9c
 916 0302 19030000 		.4byte	0x319
 917 0306 0C       		.uleb128 0xc
 918 0307 0C000000 		.4byte	.LVL19
 919 030b 3F020000 		.4byte	0x23f
 920 030f 0C       		.uleb128 0xc
 921 0310 16000000 		.4byte	.LVL20
 922 0314 AB000000 		.4byte	0xab
 923 0318 00       		.byte	0
 924 0319 09       		.uleb128 0x9
 925 031a F3010000 		.4byte	.LASF38
 926 031e 01       		.byte	0x1
 927 031f 4A03     		.2byte	0x34a
 928 0321 6B000000 		.4byte	0x6b
 929 0325 00000000 		.4byte	.LFB15
 930 0329 0C000000 		.4byte	.LFE15-.LFB15
 931 032d 01       		.uleb128 0x1
 932 032e 9C       		.byte	0x9c
 933 032f 09       		.uleb128 0x9
 934 0330 4E000000 		.4byte	.LASF39
 935 0334 01       		.byte	0x1
 936 0335 5E03     		.2byte	0x35e
 937 0337 6B000000 		.4byte	0x6b
 938 033b 00000000 		.4byte	.LFB16
 939 033f 0C000000 		.4byte	.LFE16-.LFB16
 940 0343 01       		.uleb128 0x1
 941 0344 9C       		.byte	0x9c
 942 0345 09       		.uleb128 0x9
 943 0346 52020000 		.4byte	.LASF40
 944 034a 01       		.byte	0x1
 945 034b 7403     		.2byte	0x374
 946 034d 6B000000 		.4byte	0x6b
 947 0351 00000000 		.4byte	.LFB17
 948 0355 0C000000 		.4byte	.LFE17-.LFB17
 949 0359 01       		.uleb128 0x1
 950 035a 9C       		.byte	0x9c
 951 035b 11       		.uleb128 0x11
 952 035c DA030000 		.4byte	.LASF47
 953 0360 01       		.byte	0x1
 954 0361 20       		.byte	0x20
 955 0362 6B000000 		.4byte	0x6b
 956 0366 05       		.uleb128 0x5
 957 0367 03       		.byte	0x3
 958 0368 00000000 		.4byte	PWM_RG_initVar
 959 036c 12       		.uleb128 0x12
 960 036d CF010000 		.4byte	.LASF41
 961 0371 CF010000 		.4byte	.LASF41
 962 0375 03       		.byte	0x3
 963 0376 7D       		.byte	0x7d
 964 0377 12       		.uleb128 0x12
 965 0378 07020000 		.4byte	.LASF42
 966 037c 07020000 		.4byte	.LASF42
 967 0380 03       		.byte	0x3
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 34


 968 0381 7E       		.byte	0x7e
 969 0382 00       		.byte	0
 970              		.section	.debug_abbrev,"",%progbits
 971              	.Ldebug_abbrev0:
 972 0000 01       		.uleb128 0x1
 973 0001 11       		.uleb128 0x11
 974 0002 01       		.byte	0x1
 975 0003 25       		.uleb128 0x25
 976 0004 0E       		.uleb128 0xe
 977 0005 13       		.uleb128 0x13
 978 0006 0B       		.uleb128 0xb
 979 0007 03       		.uleb128 0x3
 980 0008 0E       		.uleb128 0xe
 981 0009 1B       		.uleb128 0x1b
 982 000a 0E       		.uleb128 0xe
 983 000b 55       		.uleb128 0x55
 984 000c 17       		.uleb128 0x17
 985 000d 11       		.uleb128 0x11
 986 000e 01       		.uleb128 0x1
 987 000f 10       		.uleb128 0x10
 988 0010 17       		.uleb128 0x17
 989 0011 00       		.byte	0
 990 0012 00       		.byte	0
 991 0013 02       		.uleb128 0x2
 992 0014 24       		.uleb128 0x24
 993 0015 00       		.byte	0
 994 0016 0B       		.uleb128 0xb
 995 0017 0B       		.uleb128 0xb
 996 0018 3E       		.uleb128 0x3e
 997 0019 0B       		.uleb128 0xb
 998 001a 03       		.uleb128 0x3
 999 001b 0E       		.uleb128 0xe
 1000 001c 00       		.byte	0
 1001 001d 00       		.byte	0
 1002 001e 03       		.uleb128 0x3
 1003 001f 24       		.uleb128 0x24
 1004 0020 00       		.byte	0
 1005 0021 0B       		.uleb128 0xb
 1006 0022 0B       		.uleb128 0xb
 1007 0023 3E       		.uleb128 0x3e
 1008 0024 0B       		.uleb128 0xb
 1009 0025 03       		.uleb128 0x3
 1010 0026 08       		.uleb128 0x8
 1011 0027 00       		.byte	0
 1012 0028 00       		.byte	0
 1013 0029 04       		.uleb128 0x4
 1014 002a 16       		.uleb128 0x16
 1015 002b 00       		.byte	0
 1016 002c 03       		.uleb128 0x3
 1017 002d 0E       		.uleb128 0xe
 1018 002e 3A       		.uleb128 0x3a
 1019 002f 0B       		.uleb128 0xb
 1020 0030 3B       		.uleb128 0x3b
 1021 0031 05       		.uleb128 0x5
 1022 0032 49       		.uleb128 0x49
 1023 0033 13       		.uleb128 0x13
 1024 0034 00       		.byte	0
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 35


 1025 0035 00       		.byte	0
 1026 0036 05       		.uleb128 0x5
 1027 0037 35       		.uleb128 0x35
 1028 0038 00       		.byte	0
 1029 0039 49       		.uleb128 0x49
 1030 003a 13       		.uleb128 0x13
 1031 003b 00       		.byte	0
 1032 003c 00       		.byte	0
 1033 003d 06       		.uleb128 0x6
 1034 003e 2E       		.uleb128 0x2e
 1035 003f 00       		.byte	0
 1036 0040 3F       		.uleb128 0x3f
 1037 0041 19       		.uleb128 0x19
 1038 0042 03       		.uleb128 0x3
 1039 0043 0E       		.uleb128 0xe
 1040 0044 3A       		.uleb128 0x3a
 1041 0045 0B       		.uleb128 0xb
 1042 0046 3B       		.uleb128 0x3b
 1043 0047 0B       		.uleb128 0xb
 1044 0048 27       		.uleb128 0x27
 1045 0049 19       		.uleb128 0x19
 1046 004a 11       		.uleb128 0x11
 1047 004b 01       		.uleb128 0x1
 1048 004c 12       		.uleb128 0x12
 1049 004d 06       		.uleb128 0x6
 1050 004e 40       		.uleb128 0x40
 1051 004f 18       		.uleb128 0x18
 1052 0050 9742     		.uleb128 0x2117
 1053 0052 19       		.uleb128 0x19
 1054 0053 00       		.byte	0
 1055 0054 00       		.byte	0
 1056 0055 07       		.uleb128 0x7
 1057 0056 2E       		.uleb128 0x2e
 1058 0057 01       		.byte	0x1
 1059 0058 3F       		.uleb128 0x3f
 1060 0059 19       		.uleb128 0x19
 1061 005a 03       		.uleb128 0x3
 1062 005b 0E       		.uleb128 0xe
 1063 005c 3A       		.uleb128 0x3a
 1064 005d 0B       		.uleb128 0xb
 1065 005e 3B       		.uleb128 0x3b
 1066 005f 05       		.uleb128 0x5
 1067 0060 27       		.uleb128 0x27
 1068 0061 19       		.uleb128 0x19
 1069 0062 11       		.uleb128 0x11
 1070 0063 01       		.uleb128 0x1
 1071 0064 12       		.uleb128 0x12
 1072 0065 06       		.uleb128 0x6
 1073 0066 40       		.uleb128 0x40
 1074 0067 18       		.uleb128 0x18
 1075 0068 9742     		.uleb128 0x2117
 1076 006a 19       		.uleb128 0x19
 1077 006b 01       		.uleb128 0x1
 1078 006c 13       		.uleb128 0x13
 1079 006d 00       		.byte	0
 1080 006e 00       		.byte	0
 1081 006f 08       		.uleb128 0x8
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 36


 1082 0070 05       		.uleb128 0x5
 1083 0071 00       		.byte	0
 1084 0072 03       		.uleb128 0x3
 1085 0073 0E       		.uleb128 0xe
 1086 0074 3A       		.uleb128 0x3a
 1087 0075 0B       		.uleb128 0xb
 1088 0076 3B       		.uleb128 0x3b
 1089 0077 05       		.uleb128 0x5
 1090 0078 49       		.uleb128 0x49
 1091 0079 13       		.uleb128 0x13
 1092 007a 02       		.uleb128 0x2
 1093 007b 18       		.uleb128 0x18
 1094 007c 00       		.byte	0
 1095 007d 00       		.byte	0
 1096 007e 09       		.uleb128 0x9
 1097 007f 2E       		.uleb128 0x2e
 1098 0080 00       		.byte	0
 1099 0081 3F       		.uleb128 0x3f
 1100 0082 19       		.uleb128 0x19
 1101 0083 03       		.uleb128 0x3
 1102 0084 0E       		.uleb128 0xe
 1103 0085 3A       		.uleb128 0x3a
 1104 0086 0B       		.uleb128 0xb
 1105 0087 3B       		.uleb128 0x3b
 1106 0088 05       		.uleb128 0x5
 1107 0089 27       		.uleb128 0x27
 1108 008a 19       		.uleb128 0x19
 1109 008b 49       		.uleb128 0x49
 1110 008c 13       		.uleb128 0x13
 1111 008d 11       		.uleb128 0x11
 1112 008e 01       		.uleb128 0x1
 1113 008f 12       		.uleb128 0x12
 1114 0090 06       		.uleb128 0x6
 1115 0091 40       		.uleb128 0x40
 1116 0092 18       		.uleb128 0x18
 1117 0093 9742     		.uleb128 0x2117
 1118 0095 19       		.uleb128 0x19
 1119 0096 00       		.byte	0
 1120 0097 00       		.byte	0
 1121 0098 0A       		.uleb128 0xa
 1122 0099 2E       		.uleb128 0x2e
 1123 009a 01       		.byte	0x1
 1124 009b 3F       		.uleb128 0x3f
 1125 009c 19       		.uleb128 0x19
 1126 009d 03       		.uleb128 0x3
 1127 009e 0E       		.uleb128 0xe
 1128 009f 3A       		.uleb128 0x3a
 1129 00a0 0B       		.uleb128 0xb
 1130 00a1 3B       		.uleb128 0x3b
 1131 00a2 05       		.uleb128 0x5
 1132 00a3 27       		.uleb128 0x27
 1133 00a4 19       		.uleb128 0x19
 1134 00a5 49       		.uleb128 0x49
 1135 00a6 13       		.uleb128 0x13
 1136 00a7 11       		.uleb128 0x11
 1137 00a8 01       		.uleb128 0x1
 1138 00a9 12       		.uleb128 0x12
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 37


 1139 00aa 06       		.uleb128 0x6
 1140 00ab 40       		.uleb128 0x40
 1141 00ac 18       		.uleb128 0x18
 1142 00ad 9742     		.uleb128 0x2117
 1143 00af 19       		.uleb128 0x19
 1144 00b0 01       		.uleb128 0x1
 1145 00b1 13       		.uleb128 0x13
 1146 00b2 00       		.byte	0
 1147 00b3 00       		.byte	0
 1148 00b4 0B       		.uleb128 0xb
 1149 00b5 34       		.uleb128 0x34
 1150 00b6 00       		.byte	0
 1151 00b7 03       		.uleb128 0x3
 1152 00b8 0E       		.uleb128 0xe
 1153 00b9 3A       		.uleb128 0x3a
 1154 00ba 0B       		.uleb128 0xb
 1155 00bb 3B       		.uleb128 0x3b
 1156 00bc 05       		.uleb128 0x5
 1157 00bd 49       		.uleb128 0x49
 1158 00be 13       		.uleb128 0x13
 1159 00bf 02       		.uleb128 0x2
 1160 00c0 18       		.uleb128 0x18
 1161 00c1 00       		.byte	0
 1162 00c2 00       		.byte	0
 1163 00c3 0C       		.uleb128 0xc
 1164 00c4 898201   		.uleb128 0x4109
 1165 00c7 00       		.byte	0
 1166 00c8 11       		.uleb128 0x11
 1167 00c9 01       		.uleb128 0x1
 1168 00ca 31       		.uleb128 0x31
 1169 00cb 13       		.uleb128 0x13
 1170 00cc 00       		.byte	0
 1171 00cd 00       		.byte	0
 1172 00ce 0D       		.uleb128 0xd
 1173 00cf 2E       		.uleb128 0x2e
 1174 00d0 01       		.byte	0x1
 1175 00d1 3F       		.uleb128 0x3f
 1176 00d2 19       		.uleb128 0x19
 1177 00d3 03       		.uleb128 0x3
 1178 00d4 0E       		.uleb128 0xe
 1179 00d5 3A       		.uleb128 0x3a
 1180 00d6 0B       		.uleb128 0xb
 1181 00d7 3B       		.uleb128 0x3b
 1182 00d8 0B       		.uleb128 0xb
 1183 00d9 27       		.uleb128 0x27
 1184 00da 19       		.uleb128 0x19
 1185 00db 11       		.uleb128 0x11
 1186 00dc 01       		.uleb128 0x1
 1187 00dd 12       		.uleb128 0x12
 1188 00de 06       		.uleb128 0x6
 1189 00df 40       		.uleb128 0x40
 1190 00e0 18       		.uleb128 0x18
 1191 00e1 9742     		.uleb128 0x2117
 1192 00e3 19       		.uleb128 0x19
 1193 00e4 01       		.uleb128 0x1
 1194 00e5 13       		.uleb128 0x13
 1195 00e6 00       		.byte	0
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 38


 1196 00e7 00       		.byte	0
 1197 00e8 0E       		.uleb128 0xe
 1198 00e9 34       		.uleb128 0x34
 1199 00ea 00       		.byte	0
 1200 00eb 03       		.uleb128 0x3
 1201 00ec 0E       		.uleb128 0xe
 1202 00ed 3A       		.uleb128 0x3a
 1203 00ee 0B       		.uleb128 0xb
 1204 00ef 3B       		.uleb128 0x3b
 1205 00f0 0B       		.uleb128 0xb
 1206 00f1 49       		.uleb128 0x49
 1207 00f2 13       		.uleb128 0x13
 1208 00f3 02       		.uleb128 0x2
 1209 00f4 17       		.uleb128 0x17
 1210 00f5 00       		.byte	0
 1211 00f6 00       		.byte	0
 1212 00f7 0F       		.uleb128 0xf
 1213 00f8 898201   		.uleb128 0x4109
 1214 00fb 01       		.byte	0x1
 1215 00fc 11       		.uleb128 0x11
 1216 00fd 01       		.uleb128 0x1
 1217 00fe 31       		.uleb128 0x31
 1218 00ff 13       		.uleb128 0x13
 1219 0100 01       		.uleb128 0x1
 1220 0101 13       		.uleb128 0x13
 1221 0102 00       		.byte	0
 1222 0103 00       		.byte	0
 1223 0104 10       		.uleb128 0x10
 1224 0105 8A8201   		.uleb128 0x410a
 1225 0108 00       		.byte	0
 1226 0109 02       		.uleb128 0x2
 1227 010a 18       		.uleb128 0x18
 1228 010b 9142     		.uleb128 0x2111
 1229 010d 18       		.uleb128 0x18
 1230 010e 00       		.byte	0
 1231 010f 00       		.byte	0
 1232 0110 11       		.uleb128 0x11
 1233 0111 34       		.uleb128 0x34
 1234 0112 00       		.byte	0
 1235 0113 03       		.uleb128 0x3
 1236 0114 0E       		.uleb128 0xe
 1237 0115 3A       		.uleb128 0x3a
 1238 0116 0B       		.uleb128 0xb
 1239 0117 3B       		.uleb128 0x3b
 1240 0118 0B       		.uleb128 0xb
 1241 0119 49       		.uleb128 0x49
 1242 011a 13       		.uleb128 0x13
 1243 011b 3F       		.uleb128 0x3f
 1244 011c 19       		.uleb128 0x19
 1245 011d 02       		.uleb128 0x2
 1246 011e 18       		.uleb128 0x18
 1247 011f 00       		.byte	0
 1248 0120 00       		.byte	0
 1249 0121 12       		.uleb128 0x12
 1250 0122 2E       		.uleb128 0x2e
 1251 0123 00       		.byte	0
 1252 0124 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 39


 1253 0125 19       		.uleb128 0x19
 1254 0126 3C       		.uleb128 0x3c
 1255 0127 19       		.uleb128 0x19
 1256 0128 6E       		.uleb128 0x6e
 1257 0129 0E       		.uleb128 0xe
 1258 012a 03       		.uleb128 0x3
 1259 012b 0E       		.uleb128 0xe
 1260 012c 3A       		.uleb128 0x3a
 1261 012d 0B       		.uleb128 0xb
 1262 012e 3B       		.uleb128 0x3b
 1263 012f 0B       		.uleb128 0xb
 1264 0130 00       		.byte	0
 1265 0131 00       		.byte	0
 1266 0132 00       		.byte	0
 1267              		.section	.debug_loc,"",%progbits
 1268              	.Ldebug_loc0:
 1269              	.LLST0:
 1270 0000 0A000000 		.4byte	.LVL9
 1271 0004 0E000000 		.4byte	.LVL10
 1272 0008 0100     		.2byte	0x1
 1273 000a 53       		.byte	0x53
 1274 000b 00000000 		.4byte	0
 1275 000f 00000000 		.4byte	0
 1276              	.LLST1:
 1277 0013 3C000000 		.4byte	.LVL16
 1278 0017 49000000 		.4byte	.LVL17-1
 1279 001b 0100     		.2byte	0x1
 1280 001d 50       		.byte	0x50
 1281 001e 00000000 		.4byte	0
 1282 0022 00000000 		.4byte	0
 1283              		.section	.debug_aranges,"",%progbits
 1284 0000 A4000000 		.4byte	0xa4
 1285 0004 0200     		.2byte	0x2
 1286 0006 00000000 		.4byte	.Ldebug_info0
 1287 000a 04       		.byte	0x4
 1288 000b 00       		.byte	0
 1289 000c 0000     		.2byte	0
 1290 000e 0000     		.2byte	0
 1291 0010 00000000 		.4byte	.LFB2
 1292 0014 10000000 		.4byte	.LFE2-.LFB2
 1293 0018 00000000 		.4byte	.LFB3
 1294 001c 10000000 		.4byte	.LFE3-.LFB3
 1295 0020 00000000 		.4byte	.LFB4
 1296 0024 0C000000 		.4byte	.LFE4-.LFB4
 1297 0028 00000000 		.4byte	.LFB5
 1298 002c 14000000 		.4byte	.LFE5-.LFB5
 1299 0030 00000000 		.4byte	.LFB7
 1300 0034 0C000000 		.4byte	.LFE7-.LFB7
 1301 0038 00000000 		.4byte	.LFB8
 1302 003c 0C000000 		.4byte	.LFE8-.LFB8
 1303 0040 00000000 		.4byte	.LFB9
 1304 0044 0C000000 		.4byte	.LFE9-.LFB9
 1305 0048 00000000 		.4byte	.LFB10
 1306 004c 0C000000 		.4byte	.LFE10-.LFB10
 1307 0050 00000000 		.4byte	.LFB11
 1308 0054 0C000000 		.4byte	.LFE11-.LFB11
 1309 0058 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 40


 1310 005c 0C000000 		.4byte	.LFE12-.LFB12
 1311 0060 00000000 		.4byte	.LFB13
 1312 0064 0C000000 		.4byte	.LFE13-.LFB13
 1313 0068 00000000 		.4byte	.LFB14
 1314 006c 0C000000 		.4byte	.LFE14-.LFB14
 1315 0070 00000000 		.4byte	.LFB6
 1316 0074 14000000 		.4byte	.LFE6-.LFB6
 1317 0078 00000000 		.4byte	.LFB1
 1318 007c 58000000 		.4byte	.LFE1-.LFB1
 1319 0080 00000000 		.4byte	.LFB0
 1320 0084 1C000000 		.4byte	.LFE0-.LFB0
 1321 0088 00000000 		.4byte	.LFB15
 1322 008c 0C000000 		.4byte	.LFE15-.LFB15
 1323 0090 00000000 		.4byte	.LFB16
 1324 0094 0C000000 		.4byte	.LFE16-.LFB16
 1325 0098 00000000 		.4byte	.LFB17
 1326 009c 0C000000 		.4byte	.LFE17-.LFB17
 1327 00a0 00000000 		.4byte	0
 1328 00a4 00000000 		.4byte	0
 1329              		.section	.debug_ranges,"",%progbits
 1330              	.Ldebug_ranges0:
 1331 0000 00000000 		.4byte	.LFB2
 1332 0004 10000000 		.4byte	.LFE2
 1333 0008 00000000 		.4byte	.LFB3
 1334 000c 10000000 		.4byte	.LFE3
 1335 0010 00000000 		.4byte	.LFB4
 1336 0014 0C000000 		.4byte	.LFE4
 1337 0018 00000000 		.4byte	.LFB5
 1338 001c 14000000 		.4byte	.LFE5
 1339 0020 00000000 		.4byte	.LFB7
 1340 0024 0C000000 		.4byte	.LFE7
 1341 0028 00000000 		.4byte	.LFB8
 1342 002c 0C000000 		.4byte	.LFE8
 1343 0030 00000000 		.4byte	.LFB9
 1344 0034 0C000000 		.4byte	.LFE9
 1345 0038 00000000 		.4byte	.LFB10
 1346 003c 0C000000 		.4byte	.LFE10
 1347 0040 00000000 		.4byte	.LFB11
 1348 0044 0C000000 		.4byte	.LFE11
 1349 0048 00000000 		.4byte	.LFB12
 1350 004c 0C000000 		.4byte	.LFE12
 1351 0050 00000000 		.4byte	.LFB13
 1352 0054 0C000000 		.4byte	.LFE13
 1353 0058 00000000 		.4byte	.LFB14
 1354 005c 0C000000 		.4byte	.LFE14
 1355 0060 00000000 		.4byte	.LFB6
 1356 0064 14000000 		.4byte	.LFE6
 1357 0068 00000000 		.4byte	.LFB1
 1358 006c 58000000 		.4byte	.LFE1
 1359 0070 00000000 		.4byte	.LFB0
 1360 0074 1C000000 		.4byte	.LFE0
 1361 0078 00000000 		.4byte	.LFB15
 1362 007c 0C000000 		.4byte	.LFE15
 1363 0080 00000000 		.4byte	.LFB16
 1364 0084 0C000000 		.4byte	.LFE16
 1365 0088 00000000 		.4byte	.LFB17
 1366 008c 0C000000 		.4byte	.LFE17
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 41


 1367 0090 00000000 		.4byte	0
 1368 0094 00000000 		.4byte	0
 1369              		.section	.debug_line,"",%progbits
 1370              	.Ldebug_line0:
 1371 0000 A6010000 		.section	.debug_str,"MS",%progbits,1
 1371      02004E00 
 1371      00000201 
 1371      FB0E0D00 
 1371      01010101 
 1372              	.LASF31:
 1373 0000 50574D5F 		.ascii	"PWM_RG_ReadCapture\000"
 1373      52475F52 
 1373      65616443 
 1373      61707475 
 1373      726500
 1374              	.LASF34:
 1375 0013 72657375 		.ascii	"result\000"
 1375      6C7400
 1376              	.LASF16:
 1377 001a 50574D5F 		.ascii	"PWM_RG_Enable\000"
 1377      52475F45 
 1377      6E61626C 
 1377      6500
 1378              	.LASF17:
 1379 0028 50574D5F 		.ascii	"PWM_RG_Stop\000"
 1379      52475F53 
 1379      746F7000 
 1380              	.LASF21:
 1381 0034 70657269 		.ascii	"period\000"
 1381      6F6400
 1382              	.LASF3:
 1383 003b 73686F72 		.ascii	"short unsigned int\000"
 1383      7420756E 
 1383      7369676E 
 1383      65642069 
 1383      6E7400
 1384              	.LASF39:
 1385 004e 50574D5F 		.ascii	"PWM_RG_ReadCompare2\000"
 1385      52475F52 
 1385      65616443 
 1385      6F6D7061 
 1385      72653200 
 1386              	.LASF27:
 1387 0062 50574D5F 		.ascii	"PWM_RG_ReadCounter\000"
 1387      52475F52 
 1387      65616443 
 1387      6F756E74 
 1387      657200
 1388              	.LASF24:
 1389 0075 50574D5F 		.ascii	"PWM_RG_WriteCompare2\000"
 1389      52475F57 
 1389      72697465 
 1389      436F6D70 
 1389      61726532 
 1390              	.LASF9:
 1391 008a 666C6F61 		.ascii	"float\000"
 1391      7400
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 42


 1392              	.LASF20:
 1393 0090 636F756E 		.ascii	"counter\000"
 1393      74657200 
 1394              	.LASF7:
 1395 0098 6C6F6E67 		.ascii	"long long unsigned int\000"
 1395      206C6F6E 
 1395      6720756E 
 1395      7369676E 
 1395      65642069 
 1396              	.LASF1:
 1397 00af 756E7369 		.ascii	"unsigned char\000"
 1397      676E6564 
 1397      20636861 
 1397      7200
 1398              	.LASF43:
 1399 00bd 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1399      43313120 
 1399      352E342E 
 1399      31203230 
 1399      31363036 
 1400 00f0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1400      20726576 
 1400      6973696F 
 1400      6E203233 
 1400      37373135 
 1401 0123 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1401      66756E63 
 1401      74696F6E 
 1401      2D736563 
 1401      74696F6E 
 1402              	.LASF13:
 1403 014b 72656738 		.ascii	"reg8\000"
 1403      00
 1404              	.LASF33:
 1405 0150 50574D5F 		.ascii	"PWM_RG_Init\000"
 1405      52475F49 
 1405      6E697400 
 1406              	.LASF5:
 1407 015c 6C6F6E67 		.ascii	"long unsigned int\000"
 1407      20756E73 
 1407      69676E65 
 1407      6420696E 
 1407      7400
 1408              	.LASF37:
 1409 016e 50574D5F 		.ascii	"PWM_RG_Start\000"
 1409      52475F53 
 1409      74617274 
 1409      00
 1410              	.LASF12:
 1411 017b 75696E74 		.ascii	"uint8\000"
 1411      3800
 1412              	.LASF30:
 1413 0181 636F6E74 		.ascii	"control\000"
 1413      726F6C00 
 1414              	.LASF10:
 1415 0189 646F7562 		.ascii	"double\000"
 1415      6C6500
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 43


 1416              	.LASF25:
 1417 0190 50574D5F 		.ascii	"PWM_RG_SetInterruptMode\000"
 1417      52475F53 
 1417      6574496E 
 1417      74657272 
 1417      7570744D 
 1418              	.LASF19:
 1419 01a8 50574D5F 		.ascii	"PWM_RG_WritePeriod\000"
 1419      52475F57 
 1419      72697465 
 1419      50657269 
 1419      6F6400
 1420              	.LASF18:
 1421 01bb 50574D5F 		.ascii	"PWM_RG_WriteCounter\000"
 1421      52475F57 
 1421      72697465 
 1421      436F756E 
 1421      74657200 
 1422              	.LASF41:
 1423 01cf 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1423      74657243 
 1423      72697469 
 1423      63616C53 
 1423      65637469 
 1424              	.LASF8:
 1425 01e6 756E7369 		.ascii	"unsigned int\000"
 1425      676E6564 
 1425      20696E74 
 1425      00
 1426              	.LASF38:
 1427 01f3 50574D5F 		.ascii	"PWM_RG_ReadCompare1\000"
 1427      52475F52 
 1427      65616443 
 1427      6F6D7061 
 1427      72653100 
 1428              	.LASF42:
 1429 0207 43794578 		.ascii	"CyExitCriticalSection\000"
 1429      69744372 
 1429      69746963 
 1429      616C5365 
 1429      6374696F 
 1430              	.LASF46:
 1431 021d 50574D5F 		.ascii	"PWM_RG_ReadControlRegister\000"
 1431      52475F52 
 1431      65616443 
 1431      6F6E7472 
 1431      6F6C5265 
 1432              	.LASF28:
 1433 0238 50574D5F 		.ascii	"PWM_RG_ReadStatusRegister\000"
 1433      52475F52 
 1433      65616453 
 1433      74617475 
 1433      73526567 
 1434              	.LASF40:
 1435 0252 50574D5F 		.ascii	"PWM_RG_ReadPeriod\000"
 1435      52475F52 
 1435      65616450 
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 44


 1435      6572696F 
 1435      6400
 1436              	.LASF35:
 1437 0264 6374726C 		.ascii	"ctrl\000"
 1437      00
 1438              	.LASF15:
 1439 0269 73697A65 		.ascii	"sizetype\000"
 1439      74797065 
 1439      00
 1440              	.LASF36:
 1441 0272 50574D5F 		.ascii	"PWM_RG_interruptState\000"
 1441      52475F69 
 1441      6E746572 
 1441      72757074 
 1441      53746174 
 1442              	.LASF44:
 1443 0288 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_RG.c\000"
 1443      72617465 
 1443      645F536F 
 1443      75726365 
 1443      5C50536F 
 1444              	.LASF6:
 1445 02a8 6C6F6E67 		.ascii	"long long int\000"
 1445      206C6F6E 
 1445      6720696E 
 1445      7400
 1446              	.LASF26:
 1447 02b6 696E7465 		.ascii	"interruptMode\000"
 1447      72727570 
 1447      744D6F64 
 1447      6500
 1448              	.LASF32:
 1449 02c4 50574D5F 		.ascii	"PWM_RG_ClearFIFO\000"
 1449      52475F43 
 1449      6C656172 
 1449      4649464F 
 1449      00
 1450              	.LASF2:
 1451 02d5 73686F72 		.ascii	"short int\000"
 1451      7420696E 
 1451      7400
 1452              	.LASF45:
 1453 02df 433A5C55 		.ascii	"C:\\Users\\Lory\\Desktop\\info_projects\\git_reposi"
 1453      73657273 
 1453      5C4C6F72 
 1453      795C4465 
 1453      736B746F 
 1454 030d 746F7269 		.ascii	"tories\\PSoC-Final-Project\\AY1920_II_HW_FINAL_CARZ"
 1454      65735C50 
 1454      536F432D 
 1454      46696E61 
 1454      6C2D5072 
 1455 033e 414E4947 		.ascii	"ANIGA_GUALNIERA\\AY1920_II_HW_FINAL_CARZANIGA_GUALN"
 1455      415F4755 
 1455      414C4E49 
 1455      4552415C 
 1455      41593139 
ARM GAS  C:\Users\Lory\AppData\Local\Temp\cc57zcSx.s 			page 45


 1456 0370 49455241 		.ascii	"IERA.cydsn\000"
 1456      2E637964 
 1456      736E00
 1457              	.LASF29:
 1458 037b 50574D5F 		.ascii	"PWM_RG_WriteControlRegister\000"
 1458      52475F57 
 1458      72697465 
 1458      436F6E74 
 1458      726F6C52 
 1459              	.LASF4:
 1460 0397 6C6F6E67 		.ascii	"long int\000"
 1460      20696E74 
 1460      00
 1461              	.LASF11:
 1462 03a0 63686172 		.ascii	"char\000"
 1462      00
 1463              	.LASF14:
 1464 03a5 6C6F6E67 		.ascii	"long double\000"
 1464      20646F75 
 1464      626C6500 
 1465              	.LASF0:
 1466 03b1 7369676E 		.ascii	"signed char\000"
 1466      65642063 
 1466      68617200 
 1467              	.LASF23:
 1468 03bd 636F6D70 		.ascii	"compare\000"
 1468      61726500 
 1469              	.LASF22:
 1470 03c5 50574D5F 		.ascii	"PWM_RG_WriteCompare1\000"
 1470      52475F57 
 1470      72697465 
 1470      436F6D70 
 1470      61726531 
 1471              	.LASF47:
 1472 03da 50574D5F 		.ascii	"PWM_RG_initVar\000"
 1472      52475F69 
 1472      6E697456 
 1472      617200
 1473              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
