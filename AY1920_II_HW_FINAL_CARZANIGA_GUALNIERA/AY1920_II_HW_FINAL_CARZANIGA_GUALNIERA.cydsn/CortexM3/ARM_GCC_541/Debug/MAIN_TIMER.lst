ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"MAIN_TIMER.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MAIN_TIMER_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	MAIN_TIMER_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	MAIN_TIMER_Enable, %function
  25              	MAIN_TIMER_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\MAIN_TIMER.c"
   1:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/MAIN_TIMER.c **** * File Name: MAIN_TIMER.c
   3:Generated_Source\PSoC5/MAIN_TIMER.c **** * Version 2.80
   4:Generated_Source\PSoC5/MAIN_TIMER.c **** *
   5:Generated_Source\PSoC5/MAIN_TIMER.c **** * Description:
   6:Generated_Source\PSoC5/MAIN_TIMER.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/MAIN_TIMER.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/MAIN_TIMER.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/MAIN_TIMER.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/MAIN_TIMER.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/MAIN_TIMER.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/MAIN_TIMER.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/MAIN_TIMER.c **** *  or a capture event.
  14:Generated_Source\PSoC5/MAIN_TIMER.c **** *
  15:Generated_Source\PSoC5/MAIN_TIMER.c **** * Note:
  16:Generated_Source\PSoC5/MAIN_TIMER.c **** *
  17:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
  18:Generated_Source\PSoC5/MAIN_TIMER.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/MAIN_TIMER.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/MAIN_TIMER.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/MAIN_TIMER.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/MAIN_TIMER.c **** 
  24:Generated_Source\PSoC5/MAIN_TIMER.c **** #include "MAIN_TIMER.h"
  25:Generated_Source\PSoC5/MAIN_TIMER.c **** 
  26:Generated_Source\PSoC5/MAIN_TIMER.c **** uint8 MAIN_TIMER_initVar = 0u;
  27:Generated_Source\PSoC5/MAIN_TIMER.c **** 
  28:Generated_Source\PSoC5/MAIN_TIMER.c **** 
  29:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_Init
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 2


  31:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
  32:Generated_Source\PSoC5/MAIN_TIMER.c **** *
  33:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
  34:Generated_Source\PSoC5/MAIN_TIMER.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/MAIN_TIMER.c **** *
  36:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
  37:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
  38:Generated_Source\PSoC5/MAIN_TIMER.c **** *
  39:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
  40:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
  41:Generated_Source\PSoC5/MAIN_TIMER.c **** *
  42:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/MAIN_TIMER.c **** void MAIN_TIMER_Init(void) 
  44:Generated_Source\PSoC5/MAIN_TIMER.c **** {
  45:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if(!MAIN_TIMER_UsingFixedFunction)
  46:Generated_Source\PSoC5/MAIN_TIMER.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/MAIN_TIMER.c ****             uint8 MAIN_TIMER_interruptState;
  48:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/MAIN_TIMER.c **** 
  50:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if (MAIN_TIMER_UsingFixedFunction)
  51:Generated_Source\PSoC5/MAIN_TIMER.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_CONTROL &= MAIN_TIMER_CTRL_ENABLE;
  53:Generated_Source\PSoC5/MAIN_TIMER.c **** 
  54:Generated_Source\PSoC5/MAIN_TIMER.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/MAIN_TIMER.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/MAIN_TIMER.c ****             MAIN_TIMER_CONTROL2 &= ((uint8)(~MAIN_TIMER_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/MAIN_TIMER.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/MAIN_TIMER.c **** 
  59:Generated_Source\PSoC5/MAIN_TIMER.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/MAIN_TIMER.c ****             MAIN_TIMER_CONTROL3 &= ((uint8)(~MAIN_TIMER_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/MAIN_TIMER.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/MAIN_TIMER.c **** 
  63:Generated_Source\PSoC5/MAIN_TIMER.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/MAIN_TIMER.c ****         #if (MAIN_TIMER_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/MAIN_TIMER.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/MAIN_TIMER.c ****             MAIN_TIMER_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/MAIN_TIMER.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/MAIN_TIMER.c **** 
  69:Generated_Source\PSoC5/MAIN_TIMER.c ****         #if (MAIN_TIMER_RunModeUsed == 2)
  70:Generated_Source\PSoC5/MAIN_TIMER.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/MAIN_TIMER.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/MAIN_TIMER.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/MAIN_TIMER.c ****                 MAIN_TIMER_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/MAIN_TIMER.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/MAIN_TIMER.c **** 
  76:Generated_Source\PSoC5/MAIN_TIMER.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/MAIN_TIMER.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/MAIN_TIMER.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/MAIN_TIMER.c ****                 MAIN_TIMER_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/MAIN_TIMER.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/MAIN_TIMER.c **** 
  82:Generated_Source\PSoC5/MAIN_TIMER.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/MAIN_TIMER.c **** 
  84:Generated_Source\PSoC5/MAIN_TIMER.c ****         #if (MAIN_TIMER_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/MAIN_TIMER.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/MAIN_TIMER.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/MAIN_TIMER.c ****                 MAIN_TIMER_CONTROL2 |= MAIN_TIMER_CTRL_MODE_PULSEWIDTH;
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 3


  88:Generated_Source\PSoC5/MAIN_TIMER.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/MAIN_TIMER.c **** 
  90:Generated_Source\PSoC5/MAIN_TIMER.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/MAIN_TIMER.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/MAIN_TIMER.c ****                 MAIN_TIMER_CONTROL3 &= ((uint8)(~MAIN_TIMER_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/MAIN_TIMER.c ****                 MAIN_TIMER_CONTROL3 |= MAIN_TIMER_CTRL_RCOD;
  94:Generated_Source\PSoC5/MAIN_TIMER.c **** 
  95:Generated_Source\PSoC5/MAIN_TIMER.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/MAIN_TIMER.c ****                 MAIN_TIMER_CONTROL3 &= ((uint8)(~MAIN_TIMER_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/MAIN_TIMER.c ****                 MAIN_TIMER_CONTROL3 |= MAIN_TIMER_CTRL_ENBL;
  98:Generated_Source\PSoC5/MAIN_TIMER.c **** 
  99:Generated_Source\PSoC5/MAIN_TIMER.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/MAIN_TIMER.c ****                 MAIN_TIMER_CONTROL3 |= MAIN_TIMER_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/MAIN_TIMER.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 103:Generated_Source\PSoC5/MAIN_TIMER.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 105:Generated_Source\PSoC5/MAIN_TIMER.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_RT1 &= ((uint8)(~MAIN_TIMER_RT1_MASK));
 107:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_RT1 |= MAIN_TIMER_SYNC;
 108:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 109:Generated_Source\PSoC5/MAIN_TIMER.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_RT1 &= ((uint8)(~MAIN_TIMER_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_RT1 |= MAIN_TIMER_SYNCDSI_EN;
 112:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 113:Generated_Source\PSoC5/MAIN_TIMER.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_CONTROL2 |= MAIN_TIMER_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 117:Generated_Source\PSoC5/MAIN_TIMER.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/MAIN_TIMER.c ****     MAIN_TIMER_WritePeriod(MAIN_TIMER_INIT_PERIOD);
 119:Generated_Source\PSoC5/MAIN_TIMER.c ****     MAIN_TIMER_WriteCounter(MAIN_TIMER_INIT_PERIOD);
 120:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 121:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if (MAIN_TIMER_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_CAPTURE_COUNT_CTRL |= MAIN_TIMER_CNTR_ENABLE;
 123:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_SetCaptureCount(MAIN_TIMER_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 126:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if (!MAIN_TIMER_UsingFixedFunction)
 127:Generated_Source\PSoC5/MAIN_TIMER.c ****         #if (MAIN_TIMER_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/MAIN_TIMER.c ****             MAIN_TIMER_SetCaptureMode(MAIN_TIMER_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/MAIN_TIMER.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 131:Generated_Source\PSoC5/MAIN_TIMER.c ****         #if (MAIN_TIMER_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/MAIN_TIMER.c ****             #if (!MAIN_TIMER_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/MAIN_TIMER.c ****                 if (0u == (MAIN_TIMER_CONTROL & MAIN_TIMER__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/MAIN_TIMER.c ****                 {
 135:Generated_Source\PSoC5/MAIN_TIMER.c ****                     MAIN_TIMER_SetTriggerMode(MAIN_TIMER_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/MAIN_TIMER.c ****                 }
 137:Generated_Source\PSoC5/MAIN_TIMER.c ****             #endif /* (!MAIN_TIMER_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/MAIN_TIMER.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 140:Generated_Source\PSoC5/MAIN_TIMER.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/MAIN_TIMER.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 144:Generated_Source\PSoC5/MAIN_TIMER.c ****         /* Use the interrupt output of the status register for IRQ output */
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 4


 145:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_STATUS_AUX_CTRL |= MAIN_TIMER_STATUS_ACTL_INT_EN_MASK;
 146:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 147:Generated_Source\PSoC5/MAIN_TIMER.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/MAIN_TIMER.c ****         CyExitCriticalSection(MAIN_TIMER_interruptState);
 149:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 150:Generated_Source\PSoC5/MAIN_TIMER.c ****         #if (MAIN_TIMER_EnableTriggerMode)
 151:Generated_Source\PSoC5/MAIN_TIMER.c ****             MAIN_TIMER_EnableTrigger();
 152:Generated_Source\PSoC5/MAIN_TIMER.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/MAIN_TIMER.c **** 		
 154:Generated_Source\PSoC5/MAIN_TIMER.c **** 		
 155:Generated_Source\PSoC5/MAIN_TIMER.c ****         #if (MAIN_TIMER_InterruptOnCaptureCount && !MAIN_TIMER_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/MAIN_TIMER.c ****             MAIN_TIMER_SetInterruptCount(MAIN_TIMER_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/MAIN_TIMER.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 159:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_ClearFIFO();
 160:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 162:Generated_Source\PSoC5/MAIN_TIMER.c ****     MAIN_TIMER_SetInterruptMode(MAIN_TIMER_INIT_INTERRUPT_MODE);
 163:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 164:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 165:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 166:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_Enable
 168:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 169:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 170:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 171:Generated_Source\PSoC5/MAIN_TIMER.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 173:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 174:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 175:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 176:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 177:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 178:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 179:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/MAIN_TIMER.c **** void MAIN_TIMER_Enable(void) 
 181:Generated_Source\PSoC5/MAIN_TIMER.c **** {
  28              		.loc 1 181 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 182:Generated_Source\PSoC5/MAIN_TIMER.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if (MAIN_TIMER_UsingFixedFunction)
 184:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_GLOBAL_ENABLE |= MAIN_TIMER_BLOCK_EN_MASK;
 185:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_GLOBAL_STBY_ENABLE |= MAIN_TIMER_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 188:Generated_Source\PSoC5/MAIN_TIMER.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if (!MAIN_TIMER_UDB_CONTROL_REG_REMOVED || MAIN_TIMER_UsingFixedFunction)
 190:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_CONTROL |= MAIN_TIMER_CTRL_ENABLE;
  33              		.loc 1 190 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 5


  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 77640040 		.word	1073767543
  43              		.cfi_endproc
  44              	.LFE1:
  45              		.size	MAIN_TIMER_Enable, .-MAIN_TIMER_Enable
  46              		.section	.text.MAIN_TIMER_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	MAIN_TIMER_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	MAIN_TIMER_Stop, %function
  52              	MAIN_TIMER_Stop:
  53              	.LFB3:
 191:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 193:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 194:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 195:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_Start
 197:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 198:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 199:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 200:Generated_Source\PSoC5/MAIN_TIMER.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/MAIN_TIMER.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/MAIN_TIMER.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 204:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 205:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 206:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 207:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 208:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 209:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 210:Generated_Source\PSoC5/MAIN_TIMER.c **** * Global variables:
 211:Generated_Source\PSoC5/MAIN_TIMER.c **** *  MAIN_TIMER_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/MAIN_TIMER.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 214:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/MAIN_TIMER.c **** void MAIN_TIMER_Start(void) 
 216:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 217:Generated_Source\PSoC5/MAIN_TIMER.c ****     if(MAIN_TIMER_initVar == 0u)
 218:Generated_Source\PSoC5/MAIN_TIMER.c ****     {
 219:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_Init();
 220:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 221:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_initVar = 1u;   /* Clear this bit for Initialization */
 222:Generated_Source\PSoC5/MAIN_TIMER.c ****     }
 223:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 224:Generated_Source\PSoC5/MAIN_TIMER.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/MAIN_TIMER.c ****     MAIN_TIMER_Enable();
 226:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 227:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 228:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 229:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_Stop
 231:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 232:Generated_Source\PSoC5/MAIN_TIMER.c **** *
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 6


 233:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 234:Generated_Source\PSoC5/MAIN_TIMER.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/MAIN_TIMER.c **** *  interrupts.
 236:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 237:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 238:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 239:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 240:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 241:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 242:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 243:Generated_Source\PSoC5/MAIN_TIMER.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/MAIN_TIMER.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 246:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/MAIN_TIMER.c **** void MAIN_TIMER_Stop(void) 
 248:Generated_Source\PSoC5/MAIN_TIMER.c **** {
  54              		.loc 1 248 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 249:Generated_Source\PSoC5/MAIN_TIMER.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if(!MAIN_TIMER_UDB_CONTROL_REG_REMOVED || MAIN_TIMER_UsingFixedFunction)
 251:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_CONTROL &= ((uint8)(~MAIN_TIMER_CTRL_ENABLE));
  59              		.loc 1 251 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 77640040 		.word	1073767543
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	MAIN_TIMER_Stop, .-MAIN_TIMER_Stop
  72              		.section	.text.MAIN_TIMER_SetInterruptMode,"ax",%progbits
  73              		.align	2
  74              		.global	MAIN_TIMER_SetInterruptMode
  75              		.thumb
  76              		.thumb_func
  77              		.type	MAIN_TIMER_SetInterruptMode, %function
  78              	MAIN_TIMER_SetInterruptMode:
  79              	.LFB4:
 252:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 254:Generated_Source\PSoC5/MAIN_TIMER.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if (MAIN_TIMER_UsingFixedFunction)
 256:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_GLOBAL_ENABLE &= ((uint8)(~MAIN_TIMER_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_GLOBAL_STBY_ENABLE &= ((uint8)(~MAIN_TIMER_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 260:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 261:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 262:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_SetInterruptMode
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 7


 264:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 265:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 266:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 267:Generated_Source\PSoC5/MAIN_TIMER.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/MAIN_TIMER.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/MAIN_TIMER.c **** *  be selected.
 270:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 271:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 272:Generated_Source\PSoC5/MAIN_TIMER.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/MAIN_TIMER.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 275:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 276:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 277:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 278:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/MAIN_TIMER.c **** void MAIN_TIMER_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/MAIN_TIMER.c **** {
  80              		.loc 1 280 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 281:Generated_Source\PSoC5/MAIN_TIMER.c ****     MAIN_TIMER_STATUS_MASK = interruptMode;
  86              		.loc 1 281 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 87640040 		.word	1073767559
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	MAIN_TIMER_SetInterruptMode, .-MAIN_TIMER_SetInterruptMode
  97              		.section	.text.MAIN_TIMER_SoftwareCapture,"ax",%progbits
  98              		.align	2
  99              		.global	MAIN_TIMER_SoftwareCapture
 100              		.thumb
 101              		.thumb_func
 102              		.type	MAIN_TIMER_SoftwareCapture, %function
 103              	MAIN_TIMER_SoftwareCapture:
 104              	.LFB5:
 282:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 283:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 284:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 285:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_SoftwareCapture
 287:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 288:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 289:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 290:Generated_Source\PSoC5/MAIN_TIMER.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 292:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 293:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 294:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 295:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 8


 296:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 297:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 298:Generated_Source\PSoC5/MAIN_TIMER.c **** * Side Effects:
 299:Generated_Source\PSoC5/MAIN_TIMER.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 301:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/MAIN_TIMER.c **** void MAIN_TIMER_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 105              		.loc 1 303 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 304:Generated_Source\PSoC5/MAIN_TIMER.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if(MAIN_TIMER_UsingFixedFunction)
 306:Generated_Source\PSoC5/MAIN_TIMER.c ****         (void)CY_GET_REG16(MAIN_TIMER_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/MAIN_TIMER.c ****     #else
 308:Generated_Source\PSoC5/MAIN_TIMER.c ****         (void)CY_GET_REG8(MAIN_TIMER_COUNTER_LSB_PTR_8BIT);
 110              		.loc 1 308 0
 111 0000 014B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 113 0004 7047     		bx	lr
 114              	.L12:
 115 0006 00BF     		.align	2
 116              	.L11:
 117 0008 04640040 		.word	1073767428
 118              		.cfi_endproc
 119              	.LFE5:
 120              		.size	MAIN_TIMER_SoftwareCapture, .-MAIN_TIMER_SoftwareCapture
 121              		.section	.text.MAIN_TIMER_ReadStatusRegister,"ax",%progbits
 122              		.align	2
 123              		.global	MAIN_TIMER_ReadStatusRegister
 124              		.thumb
 125              		.thumb_func
 126              		.type	MAIN_TIMER_ReadStatusRegister, %function
 127              	MAIN_TIMER_ReadStatusRegister:
 128              	.LFB6:
 309:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif/* (MAIN_TIMER_UsingFixedFunction) */
 310:Generated_Source\PSoC5/MAIN_TIMER.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 312:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 313:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 314:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_ReadStatusRegister
 316:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 317:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 318:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 319:Generated_Source\PSoC5/MAIN_TIMER.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/MAIN_TIMER.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/MAIN_TIMER.c **** *  be permuteable.
 322:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 323:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 324:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 325:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 326:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 327:Generated_Source\PSoC5/MAIN_TIMER.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/MAIN_TIMER.c **** *
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 9


 329:Generated_Source\PSoC5/MAIN_TIMER.c **** * Side Effects:
 330:Generated_Source\PSoC5/MAIN_TIMER.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 332:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/MAIN_TIMER.c **** uint8   MAIN_TIMER_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 129              		.loc 1 334 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 335:Generated_Source\PSoC5/MAIN_TIMER.c ****     return (MAIN_TIMER_STATUS);
 134              		.loc 1 335 0
 135 0000 014B     		ldr	r3, .L14
 136 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 137              		.loc 1 336 0
 138 0004 7047     		bx	lr
 139              	.L15:
 140 0006 00BF     		.align	2
 141              	.L14:
 142 0008 67640040 		.word	1073767527
 143              		.cfi_endproc
 144              	.LFE6:
 145              		.size	MAIN_TIMER_ReadStatusRegister, .-MAIN_TIMER_ReadStatusRegister
 146              		.section	.text.MAIN_TIMER_ReadControlRegister,"ax",%progbits
 147              		.align	2
 148              		.global	MAIN_TIMER_ReadControlRegister
 149              		.thumb
 150              		.thumb_func
 151              		.type	MAIN_TIMER_ReadControlRegister, %function
 152              	MAIN_TIMER_ReadControlRegister:
 153              	.LFB7:
 337:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 338:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 339:Generated_Source\PSoC5/MAIN_TIMER.c **** #if (!MAIN_TIMER_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 341:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 342:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_ReadControlRegister
 344:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 345:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 346:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 347:Generated_Source\PSoC5/MAIN_TIMER.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 349:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 350:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 351:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 352:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 353:Generated_Source\PSoC5/MAIN_TIMER.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 355:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/MAIN_TIMER.c **** uint8 MAIN_TIMER_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 154              		.loc 1 357 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 10


 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 358:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if (!MAIN_TIMER_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/MAIN_TIMER.c ****         return ((uint8)MAIN_TIMER_CONTROL);
 159              		.loc 1 359 0
 160 0000 014B     		ldr	r3, .L17
 161 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 360:Generated_Source\PSoC5/MAIN_TIMER.c ****     #else
 361:Generated_Source\PSoC5/MAIN_TIMER.c ****         return (0);
 362:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* (!MAIN_TIMER_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 162              		.loc 1 363 0
 163 0004 7047     		bx	lr
 164              	.L18:
 165 0006 00BF     		.align	2
 166              	.L17:
 167 0008 77640040 		.word	1073767543
 168              		.cfi_endproc
 169              	.LFE7:
 170              		.size	MAIN_TIMER_ReadControlRegister, .-MAIN_TIMER_ReadControlRegister
 171              		.section	.text.MAIN_TIMER_WriteControlRegister,"ax",%progbits
 172              		.align	2
 173              		.global	MAIN_TIMER_WriteControlRegister
 174              		.thumb
 175              		.thumb_func
 176              		.type	MAIN_TIMER_WriteControlRegister, %function
 177              	MAIN_TIMER_WriteControlRegister:
 178              	.LFB8:
 364:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 365:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 366:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_WriteControlRegister
 368:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 369:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 370:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 371:Generated_Source\PSoC5/MAIN_TIMER.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 373:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 374:Generated_Source\PSoC5/MAIN_TIMER.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 376:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 377:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 378:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/MAIN_TIMER.c **** void MAIN_TIMER_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 179              		.loc 1 380 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              	.LVL1:
 381:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if (!MAIN_TIMER_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_CONTROL = control;
 185              		.loc 1 382 0
 186 0000 014B     		ldr	r3, .L20
 187 0002 1870     		strb	r0, [r3]
 188 0004 7047     		bx	lr
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 11


 189              	.L21:
 190 0006 00BF     		.align	2
 191              	.L20:
 192 0008 77640040 		.word	1073767543
 193              		.cfi_endproc
 194              	.LFE8:
 195              		.size	MAIN_TIMER_WriteControlRegister, .-MAIN_TIMER_WriteControlRegister
 196              		.section	.text.MAIN_TIMER_ReadPeriod,"ax",%progbits
 197              		.align	2
 198              		.global	MAIN_TIMER_ReadPeriod
 199              		.thumb
 200              		.thumb_func
 201              		.type	MAIN_TIMER_ReadPeriod, %function
 202              	MAIN_TIMER_ReadPeriod:
 203              	.LFB9:
 383:Generated_Source\PSoC5/MAIN_TIMER.c ****     #else
 384:Generated_Source\PSoC5/MAIN_TIMER.c ****         control = 0u;
 385:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* (!MAIN_TIMER_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 387:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 388:Generated_Source\PSoC5/MAIN_TIMER.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 390:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 391:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_ReadPeriod
 393:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 394:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 395:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 396:Generated_Source\PSoC5/MAIN_TIMER.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 398:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 399:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 400:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 401:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 402:Generated_Source\PSoC5/MAIN_TIMER.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 404:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/MAIN_TIMER.c **** uint32 MAIN_TIMER_ReadPeriod(void) 
 406:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 204              		.loc 1 406 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 407:Generated_Source\PSoC5/MAIN_TIMER.c ****    #if(MAIN_TIMER_UsingFixedFunction)
 408:Generated_Source\PSoC5/MAIN_TIMER.c ****        return ((uint32)CY_GET_REG16(MAIN_TIMER_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/MAIN_TIMER.c ****    #else
 410:Generated_Source\PSoC5/MAIN_TIMER.c ****        return (CY_GET_REG32(MAIN_TIMER_PERIOD_LSB_PTR));
 209              		.loc 1 410 0
 210 0000 014B     		ldr	r3, .L23
 211 0002 1868     		ldr	r0, [r3]
 411:Generated_Source\PSoC5/MAIN_TIMER.c ****    #endif /* (MAIN_TIMER_UsingFixedFunction) */
 412:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 212              		.loc 1 412 0
 213 0004 7047     		bx	lr
 214              	.L24:
 215 0006 00BF     		.align	2
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 12


 216              	.L23:
 217 0008 24640040 		.word	1073767460
 218              		.cfi_endproc
 219              	.LFE9:
 220              		.size	MAIN_TIMER_ReadPeriod, .-MAIN_TIMER_ReadPeriod
 221              		.section	.text.MAIN_TIMER_WritePeriod,"ax",%progbits
 222              		.align	2
 223              		.global	MAIN_TIMER_WritePeriod
 224              		.thumb
 225              		.thumb_func
 226              		.type	MAIN_TIMER_WritePeriod, %function
 227              	MAIN_TIMER_WritePeriod:
 228              	.LFB10:
 413:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 414:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 415:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_WritePeriod
 417:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 418:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 419:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 420:Generated_Source\PSoC5/MAIN_TIMER.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/MAIN_TIMER.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 423:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 424:Generated_Source\PSoC5/MAIN_TIMER.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/MAIN_TIMER.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 427:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 428:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 429:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 430:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/MAIN_TIMER.c **** void MAIN_TIMER_WritePeriod(uint32 period) 
 432:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 229              		.loc 1 432 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              	.LVL2:
 433:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if(MAIN_TIMER_UsingFixedFunction)
 434:Generated_Source\PSoC5/MAIN_TIMER.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/MAIN_TIMER.c ****         CY_SET_REG16(MAIN_TIMER_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/MAIN_TIMER.c ****     #else
 437:Generated_Source\PSoC5/MAIN_TIMER.c ****         CY_SET_REG32(MAIN_TIMER_PERIOD_LSB_PTR, period);
 235              		.loc 1 437 0
 236 0000 014B     		ldr	r3, .L26
 237 0002 1860     		str	r0, [r3]
 238 0004 7047     		bx	lr
 239              	.L27:
 240 0006 00BF     		.align	2
 241              	.L26:
 242 0008 24640040 		.word	1073767460
 243              		.cfi_endproc
 244              	.LFE10:
 245              		.size	MAIN_TIMER_WritePeriod, .-MAIN_TIMER_WritePeriod
 246              		.section	.text.MAIN_TIMER_ReadCapture,"ax",%progbits
 247              		.align	2
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 13


 248              		.global	MAIN_TIMER_ReadCapture
 249              		.thumb
 250              		.thumb_func
 251              		.type	MAIN_TIMER_ReadCapture, %function
 252              	MAIN_TIMER_ReadCapture:
 253              	.LFB11:
 438:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 440:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 441:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 442:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_ReadCapture
 444:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 445:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 446:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 447:Generated_Source\PSoC5/MAIN_TIMER.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 449:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 450:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 451:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 452:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 453:Generated_Source\PSoC5/MAIN_TIMER.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 455:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/MAIN_TIMER.c **** uint32 MAIN_TIMER_ReadCapture(void) 
 457:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 254              		.loc 1 457 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 458:Generated_Source\PSoC5/MAIN_TIMER.c ****    #if(MAIN_TIMER_UsingFixedFunction)
 459:Generated_Source\PSoC5/MAIN_TIMER.c ****        return ((uint32)CY_GET_REG16(MAIN_TIMER_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/MAIN_TIMER.c ****    #else
 461:Generated_Source\PSoC5/MAIN_TIMER.c ****        return (CY_GET_REG32(MAIN_TIMER_CAPTURE_LSB_PTR));
 259              		.loc 1 461 0
 260 0000 014B     		ldr	r3, .L29
 261 0002 1868     		ldr	r0, [r3]
 462:Generated_Source\PSoC5/MAIN_TIMER.c ****    #endif /* (MAIN_TIMER_UsingFixedFunction) */
 463:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 262              		.loc 1 463 0
 263 0004 7047     		bx	lr
 264              	.L30:
 265 0006 00BF     		.align	2
 266              	.L29:
 267 0008 44640040 		.word	1073767492
 268              		.cfi_endproc
 269              	.LFE11:
 270              		.size	MAIN_TIMER_ReadCapture, .-MAIN_TIMER_ReadCapture
 271              		.section	.text.MAIN_TIMER_WriteCounter,"ax",%progbits
 272              		.align	2
 273              		.global	MAIN_TIMER_WriteCounter
 274              		.thumb
 275              		.thumb_func
 276              		.type	MAIN_TIMER_WriteCounter, %function
 277              	MAIN_TIMER_WriteCounter:
 278              	.LFB12:
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 14


 464:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 465:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 466:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_WriteCounter
 468:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 469:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 470:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 471:Generated_Source\PSoC5/MAIN_TIMER.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 473:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 474:Generated_Source\PSoC5/MAIN_TIMER.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 476:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 477:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 478:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 479:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/MAIN_TIMER.c **** void MAIN_TIMER_WriteCounter(uint32 counter) 
 481:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 279              		.loc 1 481 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LVL3:
 482:Generated_Source\PSoC5/MAIN_TIMER.c ****    #if(MAIN_TIMER_UsingFixedFunction)
 483:Generated_Source\PSoC5/MAIN_TIMER.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/MAIN_TIMER.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/MAIN_TIMER.c ****          */
 486:Generated_Source\PSoC5/MAIN_TIMER.c ****         CY_SET_REG16(MAIN_TIMER_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/MAIN_TIMER.c ****         
 488:Generated_Source\PSoC5/MAIN_TIMER.c ****     #else
 489:Generated_Source\PSoC5/MAIN_TIMER.c ****         CY_SET_REG32(MAIN_TIMER_COUNTER_LSB_PTR, counter);
 285              		.loc 1 489 0
 286 0000 014B     		ldr	r3, .L32
 287 0002 1860     		str	r0, [r3]
 288 0004 7047     		bx	lr
 289              	.L33:
 290 0006 00BF     		.align	2
 291              	.L32:
 292 0008 04640040 		.word	1073767428
 293              		.cfi_endproc
 294              	.LFE12:
 295              		.size	MAIN_TIMER_WriteCounter, .-MAIN_TIMER_WriteCounter
 296              		.section	.text.MAIN_TIMER_ReadCounter,"ax",%progbits
 297              		.align	2
 298              		.global	MAIN_TIMER_ReadCounter
 299              		.thumb
 300              		.thumb_func
 301              		.type	MAIN_TIMER_ReadCounter, %function
 302              	MAIN_TIMER_ReadCounter:
 303              	.LFB13:
 490:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 492:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 493:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 494:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_ReadCounter
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 15


 496:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 497:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 498:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 499:Generated_Source\PSoC5/MAIN_TIMER.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 501:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 502:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 503:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 504:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 505:Generated_Source\PSoC5/MAIN_TIMER.c **** *  Present compare value.
 506:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 507:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/MAIN_TIMER.c **** uint32 MAIN_TIMER_ReadCounter(void) 
 509:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 304              		.loc 1 509 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              		@ link register save eliminated.
 510:Generated_Source\PSoC5/MAIN_TIMER.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/MAIN_TIMER.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/MAIN_TIMER.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if(MAIN_TIMER_UsingFixedFunction)
 514:Generated_Source\PSoC5/MAIN_TIMER.c ****         (void)CY_GET_REG16(MAIN_TIMER_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/MAIN_TIMER.c ****     #else
 516:Generated_Source\PSoC5/MAIN_TIMER.c ****         (void)CY_GET_REG8(MAIN_TIMER_COUNTER_LSB_PTR_8BIT);
 309              		.loc 1 516 0
 310 0000 024B     		ldr	r3, .L35
 311 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif/* (MAIN_TIMER_UsingFixedFunction) */
 518:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 519:Generated_Source\PSoC5/MAIN_TIMER.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if(MAIN_TIMER_UsingFixedFunction)
 521:Generated_Source\PSoC5/MAIN_TIMER.c ****         return ((uint32)CY_GET_REG16(MAIN_TIMER_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/MAIN_TIMER.c ****     #else
 523:Generated_Source\PSoC5/MAIN_TIMER.c ****         return (CY_GET_REG32(MAIN_TIMER_CAPTURE_LSB_PTR));
 312              		.loc 1 523 0
 313 0004 024B     		ldr	r3, .L35+4
 314 0006 1868     		ldr	r0, [r3]
 524:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* (MAIN_TIMER_UsingFixedFunction) */
 525:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 315              		.loc 1 525 0
 316 0008 7047     		bx	lr
 317              	.L36:
 318 000a 00BF     		.align	2
 319              	.L35:
 320 000c 04640040 		.word	1073767428
 321 0010 44640040 		.word	1073767492
 322              		.cfi_endproc
 323              	.LFE13:
 324              		.size	MAIN_TIMER_ReadCounter, .-MAIN_TIMER_ReadCounter
 325              		.section	.text.MAIN_TIMER_ClearFIFO,"ax",%progbits
 326              		.align	2
 327              		.global	MAIN_TIMER_ClearFIFO
 328              		.thumb
 329              		.thumb_func
 330              		.type	MAIN_TIMER_ClearFIFO, %function
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 16


 331              	MAIN_TIMER_ClearFIFO:
 332              	.LFB14:
 526:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 527:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 528:Generated_Source\PSoC5/MAIN_TIMER.c **** #if(!MAIN_TIMER_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 530:Generated_Source\PSoC5/MAIN_TIMER.c ****     
 531:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/MAIN_TIMER.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/MAIN_TIMER.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/MAIN_TIMER.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 536:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 537:Generated_Source\PSoC5/MAIN_TIMER.c **** #if (MAIN_TIMER_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 539:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 540:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_SetCaptureMode
 542:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 543:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 544:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 545:Generated_Source\PSoC5/MAIN_TIMER.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 547:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 548:Generated_Source\PSoC5/MAIN_TIMER.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/MAIN_TIMER.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/MAIN_TIMER.c **** *  #define MAIN_TIMER__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/MAIN_TIMER.c **** #define MAIN_TIMER__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/MAIN_TIMER.c **** #define MAIN_TIMER__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/MAIN_TIMER.c **** #define MAIN_TIMER__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/MAIN_TIMER.c **** #define MAIN_TIMER__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/MAIN_TIMER.c ****  identifiers
 556:Generated_Source\PSoC5/MAIN_TIMER.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/MAIN_TIMER.c **** *  MAIN_TIMER__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/MAIN_TIMER.c **** *  MAIN_TIMER__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/MAIN_TIMER.c **** *  MAIN_TIMER__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/MAIN_TIMER.c **** *  MAIN_TIMER__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 562:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 563:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 564:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 565:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/MAIN_TIMER.c **** void MAIN_TIMER_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 568:Generated_Source\PSoC5/MAIN_TIMER.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/MAIN_TIMER.c ****     captureMode = ((uint8)((uint8)captureMode << MAIN_TIMER_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/MAIN_TIMER.c ****     captureMode &= (MAIN_TIMER_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 572:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if (!MAIN_TIMER_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/MAIN_TIMER.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_CONTROL &= ((uint8)(~MAIN_TIMER_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 576:Generated_Source\PSoC5/MAIN_TIMER.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_CONTROL |= captureMode;
 578:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* (!MAIN_TIMER_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 580:Generated_Source\PSoC5/MAIN_TIMER.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 17


 581:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 582:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 583:Generated_Source\PSoC5/MAIN_TIMER.c **** #if (MAIN_TIMER_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 585:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 586:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_SetTriggerMode
 588:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 589:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 590:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 591:Generated_Source\PSoC5/MAIN_TIMER.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 593:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 594:Generated_Source\PSoC5/MAIN_TIMER.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/MAIN_TIMER.c ****     #define MAIN_TIMER__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/MAIN_TIMER.c ****     #define MAIN_TIMER__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/MAIN_TIMER.c ****     #define MAIN_TIMER__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/MAIN_TIMER.c ****     #define MAIN_TIMER__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/MAIN_TIMER.c ****     #define MAIN_TIMER__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 601:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 602:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 603:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 604:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/MAIN_TIMER.c **** void MAIN_TIMER_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 607:Generated_Source\PSoC5/MAIN_TIMER.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/MAIN_TIMER.c ****     triggerMode &= MAIN_TIMER_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 610:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if (!MAIN_TIMER_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed
 611:Generated_Source\PSoC5/MAIN_TIMER.c ****     
 612:Generated_Source\PSoC5/MAIN_TIMER.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_CONTROL &= ((uint8)(~MAIN_TIMER_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 615:Generated_Source\PSoC5/MAIN_TIMER.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_CONTROL |= (triggerMode | MAIN_TIMER__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 619:Generated_Source\PSoC5/MAIN_TIMER.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 621:Generated_Source\PSoC5/MAIN_TIMER.c **** #if (MAIN_TIMER_EnableTriggerMode)
 622:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 623:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 624:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_EnableTrigger
 626:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 627:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 628:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 629:Generated_Source\PSoC5/MAIN_TIMER.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 631:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 632:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 633:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 634:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 635:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 636:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 637:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 18


 638:Generated_Source\PSoC5/MAIN_TIMER.c **** void MAIN_TIMER_EnableTrigger(void) 
 639:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 640:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if (!MAIN_TIMER_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed
 641:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_CONTROL |= MAIN_TIMER_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 644:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 645:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 646:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_DisableTrigger
 648:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 649:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 650:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 651:Generated_Source\PSoC5/MAIN_TIMER.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 653:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 654:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 655:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 656:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 657:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 658:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 659:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/MAIN_TIMER.c **** void MAIN_TIMER_DisableTrigger(void) 
 661:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 662:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if (!MAIN_TIMER_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is remove
 663:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_CONTROL &= ((uint8)(~MAIN_TIMER_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 666:Generated_Source\PSoC5/MAIN_TIMER.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 668:Generated_Source\PSoC5/MAIN_TIMER.c **** #if(MAIN_TIMER_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 670:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 671:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_SetInterruptCount
 673:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 674:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 675:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 676:Generated_Source\PSoC5/MAIN_TIMER.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 678:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 679:Generated_Source\PSoC5/MAIN_TIMER.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/MAIN_TIMER.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/MAIN_TIMER.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/MAIN_TIMER.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 684:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 685:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 686:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 687:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/MAIN_TIMER.c **** void MAIN_TIMER_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 690:Generated_Source\PSoC5/MAIN_TIMER.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/MAIN_TIMER.c ****     interruptCount &= MAIN_TIMER_CTRL_INTCNT_MASK;
 692:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 693:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if (!MAIN_TIMER_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/MAIN_TIMER.c ****         /* Clear the Current Setting */
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 19


 695:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_CONTROL &= ((uint8)(~MAIN_TIMER_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC5/MAIN_TIMER.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/MAIN_TIMER.c ****         MAIN_TIMER_CONTROL |= interruptCount;
 698:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* (!MAIN_TIMER_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 700:Generated_Source\PSoC5/MAIN_TIMER.c **** #endif /* MAIN_TIMER_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 702:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 703:Generated_Source\PSoC5/MAIN_TIMER.c **** #if (MAIN_TIMER_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 705:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 706:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_SetCaptureCount
 708:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 709:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 710:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 711:Generated_Source\PSoC5/MAIN_TIMER.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 713:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 714:Generated_Source\PSoC5/MAIN_TIMER.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/MAIN_TIMER.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/MAIN_TIMER.c **** *                captures.
 717:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 718:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 719:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 720:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 721:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/MAIN_TIMER.c **** void MAIN_TIMER_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 724:Generated_Source\PSoC5/MAIN_TIMER.c ****     MAIN_TIMER_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 726:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 727:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 728:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_ReadCaptureCount
 730:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
 731:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 732:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 733:Generated_Source\PSoC5/MAIN_TIMER.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 735:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 736:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 737:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 738:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 739:Generated_Source\PSoC5/MAIN_TIMER.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 741:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/MAIN_TIMER.c **** uint8 MAIN_TIMER_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 744:Generated_Source\PSoC5/MAIN_TIMER.c ****     return ((uint8)MAIN_TIMER_CAP_COUNT);
 745:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 746:Generated_Source\PSoC5/MAIN_TIMER.c **** #endif /* MAIN_TIMER_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 748:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 749:Generated_Source\PSoC5/MAIN_TIMER.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/MAIN_TIMER.c **** * Function Name: MAIN_TIMER_ClearFIFO
 751:Generated_Source\PSoC5/MAIN_TIMER.c **** ********************************************************************************
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 20


 752:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 753:Generated_Source\PSoC5/MAIN_TIMER.c **** * Summary:
 754:Generated_Source\PSoC5/MAIN_TIMER.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 756:Generated_Source\PSoC5/MAIN_TIMER.c **** * Parameters:
 757:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 758:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 759:Generated_Source\PSoC5/MAIN_TIMER.c **** * Return:
 760:Generated_Source\PSoC5/MAIN_TIMER.c **** *  void
 761:Generated_Source\PSoC5/MAIN_TIMER.c **** *
 762:Generated_Source\PSoC5/MAIN_TIMER.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/MAIN_TIMER.c **** void MAIN_TIMER_ClearFIFO(void) 
 764:Generated_Source\PSoC5/MAIN_TIMER.c **** {
 333              		.loc 1 764 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337 0000 08B5     		push	{r3, lr}
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 3, -8
 340              		.cfi_offset 14, -4
 765:Generated_Source\PSoC5/MAIN_TIMER.c ****     while(0u != (MAIN_TIMER_ReadStatusRegister() & MAIN_TIMER_STATUS_FIFONEMP))
 341              		.loc 1 765 0
 342 0002 01E0     		b	.L38
 343              	.L39:
 766:Generated_Source\PSoC5/MAIN_TIMER.c ****     {
 767:Generated_Source\PSoC5/MAIN_TIMER.c ****         (void)MAIN_TIMER_ReadCapture();
 344              		.loc 1 767 0
 345 0004 FFF7FEFF 		bl	MAIN_TIMER_ReadCapture
 346              	.LVL4:
 347              	.L38:
 765:Generated_Source\PSoC5/MAIN_TIMER.c ****     while(0u != (MAIN_TIMER_ReadStatusRegister() & MAIN_TIMER_STATUS_FIFONEMP))
 348              		.loc 1 765 0
 349 0008 FFF7FEFF 		bl	MAIN_TIMER_ReadStatusRegister
 350              	.LVL5:
 351 000c 10F0080F 		tst	r0, #8
 352 0010 F8D1     		bne	.L39
 768:Generated_Source\PSoC5/MAIN_TIMER.c ****     }
 769:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 353              		.loc 1 769 0
 354 0012 08BD     		pop	{r3, pc}
 355              		.cfi_endproc
 356              	.LFE14:
 357              		.size	MAIN_TIMER_ClearFIFO, .-MAIN_TIMER_ClearFIFO
 358              		.section	.text.MAIN_TIMER_Init,"ax",%progbits
 359              		.align	2
 360              		.global	MAIN_TIMER_Init
 361              		.thumb
 362              		.thumb_func
 363              		.type	MAIN_TIMER_Init, %function
 364              	MAIN_TIMER_Init:
 365              	.LFB0:
  44:Generated_Source\PSoC5/MAIN_TIMER.c ****     #if(!MAIN_TIMER_UsingFixedFunction)
 366              		.loc 1 44 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 21


 370 0000 08B5     		push	{r3, lr}
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 3, -8
 373              		.cfi_offset 14, -4
 118:Generated_Source\PSoC5/MAIN_TIMER.c ****     MAIN_TIMER_WriteCounter(MAIN_TIMER_INIT_PERIOD);
 374              		.loc 1 118 0
 375 0002 4FF0FF30 		mov	r0, #-1
 376 0006 FFF7FEFF 		bl	MAIN_TIMER_WritePeriod
 377              	.LVL6:
 119:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 378              		.loc 1 119 0
 379 000a 4FF0FF30 		mov	r0, #-1
 380 000e FFF7FEFF 		bl	MAIN_TIMER_WriteCounter
 381              	.LVL7:
 142:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 382              		.loc 1 142 0
 383 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 384              	.LVL8:
 145:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 385              		.loc 1 145 0
 386 0016 064A     		ldr	r2, .L43
 387 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 388 001a 43F01003 		orr	r3, r3, #16
 389 001e 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 390              		.loc 1 148 0
 391 0020 FFF7FEFF 		bl	CyExitCriticalSection
 392              	.LVL9:
 159:Generated_Source\PSoC5/MAIN_TIMER.c ****     #endif /* Configure additional features of UDB implementation */
 393              		.loc 1 159 0
 394 0024 FFF7FEFF 		bl	MAIN_TIMER_ClearFIFO
 395              	.LVL10:
 162:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 396              		.loc 1 162 0
 397 0028 0020     		movs	r0, #0
 398 002a FFF7FEFF 		bl	MAIN_TIMER_SetInterruptMode
 399              	.LVL11:
 400 002e 08BD     		pop	{r3, pc}
 401              	.L44:
 402              		.align	2
 403              	.L43:
 404 0030 97640040 		.word	1073767575
 405              		.cfi_endproc
 406              	.LFE0:
 407              		.size	MAIN_TIMER_Init, .-MAIN_TIMER_Init
 408              		.section	.text.MAIN_TIMER_Start,"ax",%progbits
 409              		.align	2
 410              		.global	MAIN_TIMER_Start
 411              		.thumb
 412              		.thumb_func
 413              		.type	MAIN_TIMER_Start, %function
 414              	MAIN_TIMER_Start:
 415              	.LFB2:
 216:Generated_Source\PSoC5/MAIN_TIMER.c ****     if(MAIN_TIMER_initVar == 0u)
 416              		.loc 1 216 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 22


 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 08B5     		push	{r3, lr}
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 3, -8
 423              		.cfi_offset 14, -4
 217:Generated_Source\PSoC5/MAIN_TIMER.c ****     {
 424              		.loc 1 217 0
 425 0002 054B     		ldr	r3, .L48
 426 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 427 0006 23B9     		cbnz	r3, .L46
 219:Generated_Source\PSoC5/MAIN_TIMER.c **** 
 428              		.loc 1 219 0
 429 0008 FFF7FEFF 		bl	MAIN_TIMER_Init
 430              	.LVL12:
 221:Generated_Source\PSoC5/MAIN_TIMER.c ****     }
 431              		.loc 1 221 0
 432 000c 0122     		movs	r2, #1
 433 000e 024B     		ldr	r3, .L48
 434 0010 1A70     		strb	r2, [r3]
 435              	.L46:
 225:Generated_Source\PSoC5/MAIN_TIMER.c **** }
 436              		.loc 1 225 0
 437 0012 FFF7FEFF 		bl	MAIN_TIMER_Enable
 438              	.LVL13:
 439 0016 08BD     		pop	{r3, pc}
 440              	.L49:
 441              		.align	2
 442              	.L48:
 443 0018 00000000 		.word	.LANCHOR0
 444              		.cfi_endproc
 445              	.LFE2:
 446              		.size	MAIN_TIMER_Start, .-MAIN_TIMER_Start
 447              		.global	MAIN_TIMER_initVar
 448              		.bss
 449              		.set	.LANCHOR0,. + 0
 450              		.type	MAIN_TIMER_initVar, %object
 451              		.size	MAIN_TIMER_initVar, 1
 452              	MAIN_TIMER_initVar:
 453 0000 00       		.space	1
 454              		.text
 455              	.Letext0:
 456              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 457              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 458              		.section	.debug_info,"",%progbits
 459              	.Ldebug_info0:
 460 0000 EA020000 		.4byte	0x2ea
 461 0004 0400     		.2byte	0x4
 462 0006 00000000 		.4byte	.Ldebug_abbrev0
 463 000a 04       		.byte	0x4
 464 000b 01       		.uleb128 0x1
 465 000c D8010000 		.4byte	.LASF39
 466 0010 0C       		.byte	0xc
 467 0011 A4020000 		.4byte	.LASF40
 468 0015 17030000 		.4byte	.LASF41
 469 0019 00000000 		.4byte	.Ldebug_ranges0+0
 470 001d 00000000 		.4byte	0
 471 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 23


 472 0025 02       		.uleb128 0x2
 473 0026 01       		.byte	0x1
 474 0027 06       		.byte	0x6
 475 0028 E3030000 		.4byte	.LASF0
 476 002c 02       		.uleb128 0x2
 477 002d 01       		.byte	0x1
 478 002e 08       		.byte	0x8
 479 002f C7000000 		.4byte	.LASF1
 480 0033 02       		.uleb128 0x2
 481 0034 02       		.byte	0x2
 482 0035 05       		.byte	0x5
 483 0036 F1020000 		.4byte	.LASF2
 484 003a 02       		.uleb128 0x2
 485 003b 02       		.byte	0x2
 486 003c 07       		.byte	0x7
 487 003d 58000000 		.4byte	.LASF3
 488 0041 02       		.uleb128 0x2
 489 0042 04       		.byte	0x4
 490 0043 05       		.byte	0x5
 491 0044 B3030000 		.4byte	.LASF4
 492 0048 02       		.uleb128 0x2
 493 0049 04       		.byte	0x4
 494 004a 07       		.byte	0x7
 495 004b F2000000 		.4byte	.LASF5
 496 004f 02       		.uleb128 0x2
 497 0050 08       		.byte	0x8
 498 0051 05       		.byte	0x5
 499 0052 96020000 		.4byte	.LASF6
 500 0056 02       		.uleb128 0x2
 501 0057 08       		.byte	0x8
 502 0058 07       		.byte	0x7
 503 0059 B0000000 		.4byte	.LASF7
 504 005d 03       		.uleb128 0x3
 505 005e 04       		.byte	0x4
 506 005f 05       		.byte	0x5
 507 0060 696E7400 		.ascii	"int\000"
 508 0064 02       		.uleb128 0x2
 509 0065 04       		.byte	0x4
 510 0066 07       		.byte	0x7
 511 0067 85010000 		.4byte	.LASF8
 512 006b 04       		.uleb128 0x4
 513 006c 04010000 		.4byte	.LASF9
 514 0070 02       		.byte	0x2
 515 0071 E401     		.2byte	0x1e4
 516 0073 2C000000 		.4byte	0x2c
 517 0077 04       		.uleb128 0x4
 518 0078 48010000 		.4byte	.LASF10
 519 007c 02       		.byte	0x2
 520 007d E601     		.2byte	0x1e6
 521 007f 48000000 		.4byte	0x48
 522 0083 02       		.uleb128 0x2
 523 0084 04       		.byte	0x4
 524 0085 04       		.byte	0x4
 525 0086 A2000000 		.4byte	.LASF11
 526 008a 02       		.uleb128 0x2
 527 008b 08       		.byte	0x8
 528 008c 04       		.byte	0x4
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 24


 529 008d 2C010000 		.4byte	.LASF12
 530 0091 02       		.uleb128 0x2
 531 0092 01       		.byte	0x1
 532 0093 08       		.byte	0x8
 533 0094 BC030000 		.4byte	.LASF13
 534 0098 04       		.uleb128 0x4
 535 0099 ED000000 		.4byte	.LASF14
 536 009d 02       		.byte	0x2
 537 009e 8E02     		.2byte	0x28e
 538 00a0 A4000000 		.4byte	0xa4
 539 00a4 05       		.uleb128 0x5
 540 00a5 6B000000 		.4byte	0x6b
 541 00a9 04       		.uleb128 0x4
 542 00aa 17000000 		.4byte	.LASF15
 543 00ae 02       		.byte	0x2
 544 00af 9002     		.2byte	0x290
 545 00b1 B5000000 		.4byte	0xb5
 546 00b5 05       		.uleb128 0x5
 547 00b6 77000000 		.4byte	0x77
 548 00ba 02       		.uleb128 0x2
 549 00bb 08       		.byte	0x8
 550 00bc 04       		.byte	0x4
 551 00bd C1030000 		.4byte	.LASF16
 552 00c1 02       		.uleb128 0x2
 553 00c2 04       		.byte	0x4
 554 00c3 07       		.byte	0x7
 555 00c4 66020000 		.4byte	.LASF17
 556 00c8 06       		.uleb128 0x6
 557 00c9 92010000 		.4byte	.LASF18
 558 00cd 01       		.byte	0x1
 559 00ce B4       		.byte	0xb4
 560 00cf 00000000 		.4byte	.LFB1
 561 00d3 10000000 		.4byte	.LFE1-.LFB1
 562 00d7 01       		.uleb128 0x1
 563 00d8 9C       		.byte	0x9c
 564 00d9 06       		.uleb128 0x6
 565 00da 30000000 		.4byte	.LASF19
 566 00de 01       		.byte	0x1
 567 00df F7       		.byte	0xf7
 568 00e0 00000000 		.4byte	.LFB3
 569 00e4 10000000 		.4byte	.LFE3-.LFB3
 570 00e8 01       		.uleb128 0x1
 571 00e9 9C       		.byte	0x9c
 572 00ea 07       		.uleb128 0x7
 573 00eb FB020000 		.4byte	.LASF23
 574 00ef 01       		.byte	0x1
 575 00f0 1701     		.2byte	0x117
 576 00f2 00000000 		.4byte	.LFB4
 577 00f6 0C000000 		.4byte	.LFE4-.LFB4
 578 00fa 01       		.uleb128 0x1
 579 00fb 9C       		.byte	0x9c
 580 00fc 0F010000 		.4byte	0x10f
 581 0100 08       		.uleb128 0x8
 582 0101 C8020000 		.4byte	.LASF25
 583 0105 01       		.byte	0x1
 584 0106 1701     		.2byte	0x117
 585 0108 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 25


 586 010c 01       		.uleb128 0x1
 587 010d 50       		.byte	0x50
 588 010e 00       		.byte	0
 589 010f 09       		.uleb128 0x9
 590 0110 D6020000 		.4byte	.LASF20
 591 0114 01       		.byte	0x1
 592 0115 2E01     		.2byte	0x12e
 593 0117 00000000 		.4byte	.LFB5
 594 011b 0C000000 		.4byte	.LFE5-.LFB5
 595 011f 01       		.uleb128 0x1
 596 0120 9C       		.byte	0x9c
 597 0121 0A       		.uleb128 0xa
 598 0122 A4010000 		.4byte	.LASF21
 599 0126 01       		.byte	0x1
 600 0127 4D01     		.2byte	0x14d
 601 0129 6B000000 		.4byte	0x6b
 602 012d 00000000 		.4byte	.LFB6
 603 0131 0C000000 		.4byte	.LFE6-.LFB6
 604 0135 01       		.uleb128 0x1
 605 0136 9C       		.byte	0x9c
 606 0137 0A       		.uleb128 0xa
 607 0138 4F010000 		.4byte	.LASF22
 608 013c 01       		.byte	0x1
 609 013d 6401     		.2byte	0x164
 610 013f 6B000000 		.4byte	0x6b
 611 0143 00000000 		.4byte	.LFB7
 612 0147 0C000000 		.4byte	.LFE7-.LFB7
 613 014b 01       		.uleb128 0x1
 614 014c 9C       		.byte	0x9c
 615 014d 07       		.uleb128 0x7
 616 014e 82000000 		.4byte	.LASF24
 617 0152 01       		.byte	0x1
 618 0153 7B01     		.2byte	0x17b
 619 0155 00000000 		.4byte	.LFB8
 620 0159 0C000000 		.4byte	.LFE8-.LFB8
 621 015d 01       		.uleb128 0x1
 622 015e 9C       		.byte	0x9c
 623 015f 72010000 		.4byte	0x172
 624 0163 08       		.uleb128 0x8
 625 0164 0A010000 		.4byte	.LASF26
 626 0168 01       		.byte	0x1
 627 0169 7B01     		.2byte	0x17b
 628 016b 6B000000 		.4byte	0x6b
 629 016f 01       		.uleb128 0x1
 630 0170 50       		.byte	0x50
 631 0171 00       		.byte	0
 632 0172 0A       		.uleb128 0xa
 633 0173 CD030000 		.4byte	.LASF27
 634 0177 01       		.byte	0x1
 635 0178 9501     		.2byte	0x195
 636 017a 77000000 		.4byte	0x77
 637 017e 00000000 		.4byte	.LFB9
 638 0182 0C000000 		.4byte	.LFE9-.LFB9
 639 0186 01       		.uleb128 0x1
 640 0187 9C       		.byte	0x9c
 641 0188 07       		.uleb128 0x7
 642 0189 6B000000 		.4byte	.LASF28
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 26


 643 018d 01       		.byte	0x1
 644 018e AF01     		.2byte	0x1af
 645 0190 00000000 		.4byte	.LFB10
 646 0194 0C000000 		.4byte	.LFE10-.LFB10
 647 0198 01       		.uleb128 0x1
 648 0199 9C       		.byte	0x9c
 649 019a AD010000 		.4byte	0x1ad
 650 019e 08       		.uleb128 0x8
 651 019f 51000000 		.4byte	.LASF29
 652 01a3 01       		.byte	0x1
 653 01a4 AF01     		.2byte	0x1af
 654 01a6 77000000 		.4byte	0x77
 655 01aa 01       		.uleb128 0x1
 656 01ab 50       		.byte	0x50
 657 01ac 00       		.byte	0
 658 01ad 0A       		.uleb128 0xa
 659 01ae 6F020000 		.4byte	.LASF30
 660 01b2 01       		.byte	0x1
 661 01b3 C801     		.2byte	0x1c8
 662 01b5 77000000 		.4byte	0x77
 663 01b9 00000000 		.4byte	.LFB11
 664 01bd 0C000000 		.4byte	.LFE11-.LFB11
 665 01c1 01       		.uleb128 0x1
 666 01c2 9C       		.byte	0x9c
 667 01c3 07       		.uleb128 0x7
 668 01c4 D5000000 		.4byte	.LASF31
 669 01c8 01       		.byte	0x1
 670 01c9 E001     		.2byte	0x1e0
 671 01cb 00000000 		.4byte	.LFB12
 672 01cf 0C000000 		.4byte	.LFE12-.LFB12
 673 01d3 01       		.uleb128 0x1
 674 01d4 9C       		.byte	0x9c
 675 01d5 E8010000 		.4byte	0x1e8
 676 01d9 08       		.uleb128 0x8
 677 01da A8000000 		.4byte	.LASF32
 678 01de 01       		.byte	0x1
 679 01df E001     		.2byte	0x1e0
 680 01e1 77000000 		.4byte	0x77
 681 01e5 01       		.uleb128 0x1
 682 01e6 50       		.byte	0x50
 683 01e7 00       		.byte	0
 684 01e8 0A       		.uleb128 0xa
 685 01e9 00000000 		.4byte	.LASF33
 686 01ed 01       		.byte	0x1
 687 01ee FC01     		.2byte	0x1fc
 688 01f0 77000000 		.4byte	0x77
 689 01f4 00000000 		.4byte	.LFB13
 690 01f8 14000000 		.4byte	.LFE13-.LFB13
 691 01fc 01       		.uleb128 0x1
 692 01fd 9C       		.byte	0x9c
 693 01fe 07       		.uleb128 0x7
 694 01ff 33010000 		.4byte	.LASF34
 695 0203 01       		.byte	0x1
 696 0204 FB02     		.2byte	0x2fb
 697 0206 00000000 		.4byte	.LFB14
 698 020a 14000000 		.4byte	.LFE14-.LFB14
 699 020e 01       		.uleb128 0x1
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 27


 700 020f 9C       		.byte	0x9c
 701 0210 27020000 		.4byte	0x227
 702 0214 0B       		.uleb128 0xb
 703 0215 08000000 		.4byte	.LVL4
 704 0219 AD010000 		.4byte	0x1ad
 705 021d 0B       		.uleb128 0xb
 706 021e 0C000000 		.4byte	.LVL5
 707 0222 21010000 		.4byte	0x121
 708 0226 00       		.byte	0
 709 0227 0C       		.uleb128 0xc
 710 0228 86020000 		.4byte	.LASF35
 711 022c 01       		.byte	0x1
 712 022d 2B       		.byte	0x2b
 713 022e 00000000 		.4byte	.LFB0
 714 0232 34000000 		.4byte	.LFE0-.LFB0
 715 0236 01       		.uleb128 0x1
 716 0237 9C       		.byte	0x9c
 717 0238 9E020000 		.4byte	0x29e
 718 023c 0D       		.uleb128 0xd
 719 023d 12010000 		.4byte	.LASF42
 720 0241 01       		.byte	0x1
 721 0242 2F       		.byte	0x2f
 722 0243 6B000000 		.4byte	0x6b
 723 0247 00000000 		.4byte	.LLST0
 724 024b 0E       		.uleb128 0xe
 725 024c 0A000000 		.4byte	.LVL6
 726 0250 88010000 		.4byte	0x188
 727 0254 5F020000 		.4byte	0x25f
 728 0258 0F       		.uleb128 0xf
 729 0259 01       		.uleb128 0x1
 730 025a 50       		.byte	0x50
 731 025b 02       		.uleb128 0x2
 732 025c 09       		.byte	0x9
 733 025d FF       		.byte	0xff
 734 025e 00       		.byte	0
 735 025f 0E       		.uleb128 0xe
 736 0260 12000000 		.4byte	.LVL7
 737 0264 C3010000 		.4byte	0x1c3
 738 0268 73020000 		.4byte	0x273
 739 026c 0F       		.uleb128 0xf
 740 026d 01       		.uleb128 0x1
 741 026e 50       		.byte	0x50
 742 026f 02       		.uleb128 0x2
 743 0270 09       		.byte	0x9
 744 0271 FF       		.byte	0xff
 745 0272 00       		.byte	0
 746 0273 0B       		.uleb128 0xb
 747 0274 16000000 		.4byte	.LVL8
 748 0278 D7020000 		.4byte	0x2d7
 749 027c 0B       		.uleb128 0xb
 750 027d 24000000 		.4byte	.LVL9
 751 0281 E2020000 		.4byte	0x2e2
 752 0285 0B       		.uleb128 0xb
 753 0286 28000000 		.4byte	.LVL10
 754 028a FE010000 		.4byte	0x1fe
 755 028e 10       		.uleb128 0x10
 756 028f 2E000000 		.4byte	.LVL11
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 28


 757 0293 EA000000 		.4byte	0xea
 758 0297 0F       		.uleb128 0xf
 759 0298 01       		.uleb128 0x1
 760 0299 50       		.byte	0x50
 761 029a 01       		.uleb128 0x1
 762 029b 30       		.byte	0x30
 763 029c 00       		.byte	0
 764 029d 00       		.byte	0
 765 029e 0C       		.uleb128 0xc
 766 029f 40000000 		.4byte	.LASF36
 767 02a3 01       		.byte	0x1
 768 02a4 D7       		.byte	0xd7
 769 02a5 00000000 		.4byte	.LFB2
 770 02a9 1C000000 		.4byte	.LFE2-.LFB2
 771 02ad 01       		.uleb128 0x1
 772 02ae 9C       		.byte	0x9c
 773 02af C6020000 		.4byte	0x2c6
 774 02b3 0B       		.uleb128 0xb
 775 02b4 0C000000 		.4byte	.LVL12
 776 02b8 27020000 		.4byte	0x227
 777 02bc 0B       		.uleb128 0xb
 778 02bd 16000000 		.4byte	.LVL13
 779 02c1 C8000000 		.4byte	0xc8
 780 02c5 00       		.byte	0
 781 02c6 11       		.uleb128 0x11
 782 02c7 1D000000 		.4byte	.LASF43
 783 02cb 01       		.byte	0x1
 784 02cc 1A       		.byte	0x1a
 785 02cd 6B000000 		.4byte	0x6b
 786 02d1 05       		.uleb128 0x5
 787 02d2 03       		.byte	0x3
 788 02d3 00000000 		.4byte	MAIN_TIMER_initVar
 789 02d7 12       		.uleb128 0x12
 790 02d8 6E010000 		.4byte	.LASF37
 791 02dc 6E010000 		.4byte	.LASF37
 792 02e0 03       		.byte	0x3
 793 02e1 7D       		.byte	0x7d
 794 02e2 12       		.uleb128 0x12
 795 02e3 C2010000 		.4byte	.LASF38
 796 02e7 C2010000 		.4byte	.LASF38
 797 02eb 03       		.byte	0x3
 798 02ec 7E       		.byte	0x7e
 799 02ed 00       		.byte	0
 800              		.section	.debug_abbrev,"",%progbits
 801              	.Ldebug_abbrev0:
 802 0000 01       		.uleb128 0x1
 803 0001 11       		.uleb128 0x11
 804 0002 01       		.byte	0x1
 805 0003 25       		.uleb128 0x25
 806 0004 0E       		.uleb128 0xe
 807 0005 13       		.uleb128 0x13
 808 0006 0B       		.uleb128 0xb
 809 0007 03       		.uleb128 0x3
 810 0008 0E       		.uleb128 0xe
 811 0009 1B       		.uleb128 0x1b
 812 000a 0E       		.uleb128 0xe
 813 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 29


 814 000c 17       		.uleb128 0x17
 815 000d 11       		.uleb128 0x11
 816 000e 01       		.uleb128 0x1
 817 000f 10       		.uleb128 0x10
 818 0010 17       		.uleb128 0x17
 819 0011 00       		.byte	0
 820 0012 00       		.byte	0
 821 0013 02       		.uleb128 0x2
 822 0014 24       		.uleb128 0x24
 823 0015 00       		.byte	0
 824 0016 0B       		.uleb128 0xb
 825 0017 0B       		.uleb128 0xb
 826 0018 3E       		.uleb128 0x3e
 827 0019 0B       		.uleb128 0xb
 828 001a 03       		.uleb128 0x3
 829 001b 0E       		.uleb128 0xe
 830 001c 00       		.byte	0
 831 001d 00       		.byte	0
 832 001e 03       		.uleb128 0x3
 833 001f 24       		.uleb128 0x24
 834 0020 00       		.byte	0
 835 0021 0B       		.uleb128 0xb
 836 0022 0B       		.uleb128 0xb
 837 0023 3E       		.uleb128 0x3e
 838 0024 0B       		.uleb128 0xb
 839 0025 03       		.uleb128 0x3
 840 0026 08       		.uleb128 0x8
 841 0027 00       		.byte	0
 842 0028 00       		.byte	0
 843 0029 04       		.uleb128 0x4
 844 002a 16       		.uleb128 0x16
 845 002b 00       		.byte	0
 846 002c 03       		.uleb128 0x3
 847 002d 0E       		.uleb128 0xe
 848 002e 3A       		.uleb128 0x3a
 849 002f 0B       		.uleb128 0xb
 850 0030 3B       		.uleb128 0x3b
 851 0031 05       		.uleb128 0x5
 852 0032 49       		.uleb128 0x49
 853 0033 13       		.uleb128 0x13
 854 0034 00       		.byte	0
 855 0035 00       		.byte	0
 856 0036 05       		.uleb128 0x5
 857 0037 35       		.uleb128 0x35
 858 0038 00       		.byte	0
 859 0039 49       		.uleb128 0x49
 860 003a 13       		.uleb128 0x13
 861 003b 00       		.byte	0
 862 003c 00       		.byte	0
 863 003d 06       		.uleb128 0x6
 864 003e 2E       		.uleb128 0x2e
 865 003f 00       		.byte	0
 866 0040 3F       		.uleb128 0x3f
 867 0041 19       		.uleb128 0x19
 868 0042 03       		.uleb128 0x3
 869 0043 0E       		.uleb128 0xe
 870 0044 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 30


 871 0045 0B       		.uleb128 0xb
 872 0046 3B       		.uleb128 0x3b
 873 0047 0B       		.uleb128 0xb
 874 0048 27       		.uleb128 0x27
 875 0049 19       		.uleb128 0x19
 876 004a 11       		.uleb128 0x11
 877 004b 01       		.uleb128 0x1
 878 004c 12       		.uleb128 0x12
 879 004d 06       		.uleb128 0x6
 880 004e 40       		.uleb128 0x40
 881 004f 18       		.uleb128 0x18
 882 0050 9742     		.uleb128 0x2117
 883 0052 19       		.uleb128 0x19
 884 0053 00       		.byte	0
 885 0054 00       		.byte	0
 886 0055 07       		.uleb128 0x7
 887 0056 2E       		.uleb128 0x2e
 888 0057 01       		.byte	0x1
 889 0058 3F       		.uleb128 0x3f
 890 0059 19       		.uleb128 0x19
 891 005a 03       		.uleb128 0x3
 892 005b 0E       		.uleb128 0xe
 893 005c 3A       		.uleb128 0x3a
 894 005d 0B       		.uleb128 0xb
 895 005e 3B       		.uleb128 0x3b
 896 005f 05       		.uleb128 0x5
 897 0060 27       		.uleb128 0x27
 898 0061 19       		.uleb128 0x19
 899 0062 11       		.uleb128 0x11
 900 0063 01       		.uleb128 0x1
 901 0064 12       		.uleb128 0x12
 902 0065 06       		.uleb128 0x6
 903 0066 40       		.uleb128 0x40
 904 0067 18       		.uleb128 0x18
 905 0068 9742     		.uleb128 0x2117
 906 006a 19       		.uleb128 0x19
 907 006b 01       		.uleb128 0x1
 908 006c 13       		.uleb128 0x13
 909 006d 00       		.byte	0
 910 006e 00       		.byte	0
 911 006f 08       		.uleb128 0x8
 912 0070 05       		.uleb128 0x5
 913 0071 00       		.byte	0
 914 0072 03       		.uleb128 0x3
 915 0073 0E       		.uleb128 0xe
 916 0074 3A       		.uleb128 0x3a
 917 0075 0B       		.uleb128 0xb
 918 0076 3B       		.uleb128 0x3b
 919 0077 05       		.uleb128 0x5
 920 0078 49       		.uleb128 0x49
 921 0079 13       		.uleb128 0x13
 922 007a 02       		.uleb128 0x2
 923 007b 18       		.uleb128 0x18
 924 007c 00       		.byte	0
 925 007d 00       		.byte	0
 926 007e 09       		.uleb128 0x9
 927 007f 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 31


 928 0080 00       		.byte	0
 929 0081 3F       		.uleb128 0x3f
 930 0082 19       		.uleb128 0x19
 931 0083 03       		.uleb128 0x3
 932 0084 0E       		.uleb128 0xe
 933 0085 3A       		.uleb128 0x3a
 934 0086 0B       		.uleb128 0xb
 935 0087 3B       		.uleb128 0x3b
 936 0088 05       		.uleb128 0x5
 937 0089 27       		.uleb128 0x27
 938 008a 19       		.uleb128 0x19
 939 008b 11       		.uleb128 0x11
 940 008c 01       		.uleb128 0x1
 941 008d 12       		.uleb128 0x12
 942 008e 06       		.uleb128 0x6
 943 008f 40       		.uleb128 0x40
 944 0090 18       		.uleb128 0x18
 945 0091 9742     		.uleb128 0x2117
 946 0093 19       		.uleb128 0x19
 947 0094 00       		.byte	0
 948 0095 00       		.byte	0
 949 0096 0A       		.uleb128 0xa
 950 0097 2E       		.uleb128 0x2e
 951 0098 00       		.byte	0
 952 0099 3F       		.uleb128 0x3f
 953 009a 19       		.uleb128 0x19
 954 009b 03       		.uleb128 0x3
 955 009c 0E       		.uleb128 0xe
 956 009d 3A       		.uleb128 0x3a
 957 009e 0B       		.uleb128 0xb
 958 009f 3B       		.uleb128 0x3b
 959 00a0 05       		.uleb128 0x5
 960 00a1 27       		.uleb128 0x27
 961 00a2 19       		.uleb128 0x19
 962 00a3 49       		.uleb128 0x49
 963 00a4 13       		.uleb128 0x13
 964 00a5 11       		.uleb128 0x11
 965 00a6 01       		.uleb128 0x1
 966 00a7 12       		.uleb128 0x12
 967 00a8 06       		.uleb128 0x6
 968 00a9 40       		.uleb128 0x40
 969 00aa 18       		.uleb128 0x18
 970 00ab 9742     		.uleb128 0x2117
 971 00ad 19       		.uleb128 0x19
 972 00ae 00       		.byte	0
 973 00af 00       		.byte	0
 974 00b0 0B       		.uleb128 0xb
 975 00b1 898201   		.uleb128 0x4109
 976 00b4 00       		.byte	0
 977 00b5 11       		.uleb128 0x11
 978 00b6 01       		.uleb128 0x1
 979 00b7 31       		.uleb128 0x31
 980 00b8 13       		.uleb128 0x13
 981 00b9 00       		.byte	0
 982 00ba 00       		.byte	0
 983 00bb 0C       		.uleb128 0xc
 984 00bc 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 32


 985 00bd 01       		.byte	0x1
 986 00be 3F       		.uleb128 0x3f
 987 00bf 19       		.uleb128 0x19
 988 00c0 03       		.uleb128 0x3
 989 00c1 0E       		.uleb128 0xe
 990 00c2 3A       		.uleb128 0x3a
 991 00c3 0B       		.uleb128 0xb
 992 00c4 3B       		.uleb128 0x3b
 993 00c5 0B       		.uleb128 0xb
 994 00c6 27       		.uleb128 0x27
 995 00c7 19       		.uleb128 0x19
 996 00c8 11       		.uleb128 0x11
 997 00c9 01       		.uleb128 0x1
 998 00ca 12       		.uleb128 0x12
 999 00cb 06       		.uleb128 0x6
 1000 00cc 40       		.uleb128 0x40
 1001 00cd 18       		.uleb128 0x18
 1002 00ce 9742     		.uleb128 0x2117
 1003 00d0 19       		.uleb128 0x19
 1004 00d1 01       		.uleb128 0x1
 1005 00d2 13       		.uleb128 0x13
 1006 00d3 00       		.byte	0
 1007 00d4 00       		.byte	0
 1008 00d5 0D       		.uleb128 0xd
 1009 00d6 34       		.uleb128 0x34
 1010 00d7 00       		.byte	0
 1011 00d8 03       		.uleb128 0x3
 1012 00d9 0E       		.uleb128 0xe
 1013 00da 3A       		.uleb128 0x3a
 1014 00db 0B       		.uleb128 0xb
 1015 00dc 3B       		.uleb128 0x3b
 1016 00dd 0B       		.uleb128 0xb
 1017 00de 49       		.uleb128 0x49
 1018 00df 13       		.uleb128 0x13
 1019 00e0 02       		.uleb128 0x2
 1020 00e1 17       		.uleb128 0x17
 1021 00e2 00       		.byte	0
 1022 00e3 00       		.byte	0
 1023 00e4 0E       		.uleb128 0xe
 1024 00e5 898201   		.uleb128 0x4109
 1025 00e8 01       		.byte	0x1
 1026 00e9 11       		.uleb128 0x11
 1027 00ea 01       		.uleb128 0x1
 1028 00eb 31       		.uleb128 0x31
 1029 00ec 13       		.uleb128 0x13
 1030 00ed 01       		.uleb128 0x1
 1031 00ee 13       		.uleb128 0x13
 1032 00ef 00       		.byte	0
 1033 00f0 00       		.byte	0
 1034 00f1 0F       		.uleb128 0xf
 1035 00f2 8A8201   		.uleb128 0x410a
 1036 00f5 00       		.byte	0
 1037 00f6 02       		.uleb128 0x2
 1038 00f7 18       		.uleb128 0x18
 1039 00f8 9142     		.uleb128 0x2111
 1040 00fa 18       		.uleb128 0x18
 1041 00fb 00       		.byte	0
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 33


 1042 00fc 00       		.byte	0
 1043 00fd 10       		.uleb128 0x10
 1044 00fe 898201   		.uleb128 0x4109
 1045 0101 01       		.byte	0x1
 1046 0102 11       		.uleb128 0x11
 1047 0103 01       		.uleb128 0x1
 1048 0104 31       		.uleb128 0x31
 1049 0105 13       		.uleb128 0x13
 1050 0106 00       		.byte	0
 1051 0107 00       		.byte	0
 1052 0108 11       		.uleb128 0x11
 1053 0109 34       		.uleb128 0x34
 1054 010a 00       		.byte	0
 1055 010b 03       		.uleb128 0x3
 1056 010c 0E       		.uleb128 0xe
 1057 010d 3A       		.uleb128 0x3a
 1058 010e 0B       		.uleb128 0xb
 1059 010f 3B       		.uleb128 0x3b
 1060 0110 0B       		.uleb128 0xb
 1061 0111 49       		.uleb128 0x49
 1062 0112 13       		.uleb128 0x13
 1063 0113 3F       		.uleb128 0x3f
 1064 0114 19       		.uleb128 0x19
 1065 0115 02       		.uleb128 0x2
 1066 0116 18       		.uleb128 0x18
 1067 0117 00       		.byte	0
 1068 0118 00       		.byte	0
 1069 0119 12       		.uleb128 0x12
 1070 011a 2E       		.uleb128 0x2e
 1071 011b 00       		.byte	0
 1072 011c 3F       		.uleb128 0x3f
 1073 011d 19       		.uleb128 0x19
 1074 011e 3C       		.uleb128 0x3c
 1075 011f 19       		.uleb128 0x19
 1076 0120 6E       		.uleb128 0x6e
 1077 0121 0E       		.uleb128 0xe
 1078 0122 03       		.uleb128 0x3
 1079 0123 0E       		.uleb128 0xe
 1080 0124 3A       		.uleb128 0x3a
 1081 0125 0B       		.uleb128 0xb
 1082 0126 3B       		.uleb128 0x3b
 1083 0127 0B       		.uleb128 0xb
 1084 0128 00       		.byte	0
 1085 0129 00       		.byte	0
 1086 012a 00       		.byte	0
 1087              		.section	.debug_loc,"",%progbits
 1088              	.Ldebug_loc0:
 1089              	.LLST0:
 1090 0000 16000000 		.4byte	.LVL8
 1091 0004 23000000 		.4byte	.LVL9-1
 1092 0008 0100     		.2byte	0x1
 1093 000a 50       		.byte	0x50
 1094 000b 00000000 		.4byte	0
 1095 000f 00000000 		.4byte	0
 1096              		.section	.debug_aranges,"",%progbits
 1097 0000 8C000000 		.4byte	0x8c
 1098 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 34


 1099 0006 00000000 		.4byte	.Ldebug_info0
 1100 000a 04       		.byte	0x4
 1101 000b 00       		.byte	0
 1102 000c 0000     		.2byte	0
 1103 000e 0000     		.2byte	0
 1104 0010 00000000 		.4byte	.LFB1
 1105 0014 10000000 		.4byte	.LFE1-.LFB1
 1106 0018 00000000 		.4byte	.LFB3
 1107 001c 10000000 		.4byte	.LFE3-.LFB3
 1108 0020 00000000 		.4byte	.LFB4
 1109 0024 0C000000 		.4byte	.LFE4-.LFB4
 1110 0028 00000000 		.4byte	.LFB5
 1111 002c 0C000000 		.4byte	.LFE5-.LFB5
 1112 0030 00000000 		.4byte	.LFB6
 1113 0034 0C000000 		.4byte	.LFE6-.LFB6
 1114 0038 00000000 		.4byte	.LFB7
 1115 003c 0C000000 		.4byte	.LFE7-.LFB7
 1116 0040 00000000 		.4byte	.LFB8
 1117 0044 0C000000 		.4byte	.LFE8-.LFB8
 1118 0048 00000000 		.4byte	.LFB9
 1119 004c 0C000000 		.4byte	.LFE9-.LFB9
 1120 0050 00000000 		.4byte	.LFB10
 1121 0054 0C000000 		.4byte	.LFE10-.LFB10
 1122 0058 00000000 		.4byte	.LFB11
 1123 005c 0C000000 		.4byte	.LFE11-.LFB11
 1124 0060 00000000 		.4byte	.LFB12
 1125 0064 0C000000 		.4byte	.LFE12-.LFB12
 1126 0068 00000000 		.4byte	.LFB13
 1127 006c 14000000 		.4byte	.LFE13-.LFB13
 1128 0070 00000000 		.4byte	.LFB14
 1129 0074 14000000 		.4byte	.LFE14-.LFB14
 1130 0078 00000000 		.4byte	.LFB0
 1131 007c 34000000 		.4byte	.LFE0-.LFB0
 1132 0080 00000000 		.4byte	.LFB2
 1133 0084 1C000000 		.4byte	.LFE2-.LFB2
 1134 0088 00000000 		.4byte	0
 1135 008c 00000000 		.4byte	0
 1136              		.section	.debug_ranges,"",%progbits
 1137              	.Ldebug_ranges0:
 1138 0000 00000000 		.4byte	.LFB1
 1139 0004 10000000 		.4byte	.LFE1
 1140 0008 00000000 		.4byte	.LFB3
 1141 000c 10000000 		.4byte	.LFE3
 1142 0010 00000000 		.4byte	.LFB4
 1143 0014 0C000000 		.4byte	.LFE4
 1144 0018 00000000 		.4byte	.LFB5
 1145 001c 0C000000 		.4byte	.LFE5
 1146 0020 00000000 		.4byte	.LFB6
 1147 0024 0C000000 		.4byte	.LFE6
 1148 0028 00000000 		.4byte	.LFB7
 1149 002c 0C000000 		.4byte	.LFE7
 1150 0030 00000000 		.4byte	.LFB8
 1151 0034 0C000000 		.4byte	.LFE8
 1152 0038 00000000 		.4byte	.LFB9
 1153 003c 0C000000 		.4byte	.LFE9
 1154 0040 00000000 		.4byte	.LFB10
 1155 0044 0C000000 		.4byte	.LFE10
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 35


 1156 0048 00000000 		.4byte	.LFB11
 1157 004c 0C000000 		.4byte	.LFE11
 1158 0050 00000000 		.4byte	.LFB12
 1159 0054 0C000000 		.4byte	.LFE12
 1160 0058 00000000 		.4byte	.LFB13
 1161 005c 14000000 		.4byte	.LFE13
 1162 0060 00000000 		.4byte	.LFB14
 1163 0064 14000000 		.4byte	.LFE14
 1164 0068 00000000 		.4byte	.LFB0
 1165 006c 34000000 		.4byte	.LFE0
 1166 0070 00000000 		.4byte	.LFB2
 1167 0074 1C000000 		.4byte	.LFE2
 1168 0078 00000000 		.4byte	0
 1169 007c 00000000 		.4byte	0
 1170              		.section	.debug_line,"",%progbits
 1171              	.Ldebug_line0:
 1172 0000 71010000 		.section	.debug_str,"MS",%progbits,1
 1172      02005200 
 1172      00000201 
 1172      FB0E0D00 
 1172      01010101 
 1173              	.LASF33:
 1174 0000 4D41494E 		.ascii	"MAIN_TIMER_ReadCounter\000"
 1174      5F54494D 
 1174      45525F52 
 1174      65616443 
 1174      6F756E74 
 1175              	.LASF15:
 1176 0017 72656733 		.ascii	"reg32\000"
 1176      3200
 1177              	.LASF43:
 1178 001d 4D41494E 		.ascii	"MAIN_TIMER_initVar\000"
 1178      5F54494D 
 1178      45525F69 
 1178      6E697456 
 1178      617200
 1179              	.LASF19:
 1180 0030 4D41494E 		.ascii	"MAIN_TIMER_Stop\000"
 1180      5F54494D 
 1180      45525F53 
 1180      746F7000 
 1181              	.LASF36:
 1182 0040 4D41494E 		.ascii	"MAIN_TIMER_Start\000"
 1182      5F54494D 
 1182      45525F53 
 1182      74617274 
 1182      00
 1183              	.LASF29:
 1184 0051 70657269 		.ascii	"period\000"
 1184      6F6400
 1185              	.LASF3:
 1186 0058 73686F72 		.ascii	"short unsigned int\000"
 1186      7420756E 
 1186      7369676E 
 1186      65642069 
 1186      6E7400
 1187              	.LASF28:
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 36


 1188 006b 4D41494E 		.ascii	"MAIN_TIMER_WritePeriod\000"
 1188      5F54494D 
 1188      45525F57 
 1188      72697465 
 1188      50657269 
 1189              	.LASF24:
 1190 0082 4D41494E 		.ascii	"MAIN_TIMER_WriteControlRegister\000"
 1190      5F54494D 
 1190      45525F57 
 1190      72697465 
 1190      436F6E74 
 1191              	.LASF11:
 1192 00a2 666C6F61 		.ascii	"float\000"
 1192      7400
 1193              	.LASF32:
 1194 00a8 636F756E 		.ascii	"counter\000"
 1194      74657200 
 1195              	.LASF7:
 1196 00b0 6C6F6E67 		.ascii	"long long unsigned int\000"
 1196      206C6F6E 
 1196      6720756E 
 1196      7369676E 
 1196      65642069 
 1197              	.LASF1:
 1198 00c7 756E7369 		.ascii	"unsigned char\000"
 1198      676E6564 
 1198      20636861 
 1198      7200
 1199              	.LASF31:
 1200 00d5 4D41494E 		.ascii	"MAIN_TIMER_WriteCounter\000"
 1200      5F54494D 
 1200      45525F57 
 1200      72697465 
 1200      436F756E 
 1201              	.LASF14:
 1202 00ed 72656738 		.ascii	"reg8\000"
 1202      00
 1203              	.LASF5:
 1204 00f2 6C6F6E67 		.ascii	"long unsigned int\000"
 1204      20756E73 
 1204      69676E65 
 1204      6420696E 
 1204      7400
 1205              	.LASF9:
 1206 0104 75696E74 		.ascii	"uint8\000"
 1206      3800
 1207              	.LASF26:
 1208 010a 636F6E74 		.ascii	"control\000"
 1208      726F6C00 
 1209              	.LASF42:
 1210 0112 4D41494E 		.ascii	"MAIN_TIMER_interruptState\000"
 1210      5F54494D 
 1210      45525F69 
 1210      6E746572 
 1210      72757074 
 1211              	.LASF12:
 1212 012c 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 37


 1212      6C6500
 1213              	.LASF34:
 1214 0133 4D41494E 		.ascii	"MAIN_TIMER_ClearFIFO\000"
 1214      5F54494D 
 1214      45525F43 
 1214      6C656172 
 1214      4649464F 
 1215              	.LASF10:
 1216 0148 75696E74 		.ascii	"uint32\000"
 1216      333200
 1217              	.LASF22:
 1218 014f 4D41494E 		.ascii	"MAIN_TIMER_ReadControlRegister\000"
 1218      5F54494D 
 1218      45525F52 
 1218      65616443 
 1218      6F6E7472 
 1219              	.LASF37:
 1220 016e 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1220      74657243 
 1220      72697469 
 1220      63616C53 
 1220      65637469 
 1221              	.LASF8:
 1222 0185 756E7369 		.ascii	"unsigned int\000"
 1222      676E6564 
 1222      20696E74 
 1222      00
 1223              	.LASF18:
 1224 0192 4D41494E 		.ascii	"MAIN_TIMER_Enable\000"
 1224      5F54494D 
 1224      45525F45 
 1224      6E61626C 
 1224      6500
 1225              	.LASF21:
 1226 01a4 4D41494E 		.ascii	"MAIN_TIMER_ReadStatusRegister\000"
 1226      5F54494D 
 1226      45525F52 
 1226      65616453 
 1226      74617475 
 1227              	.LASF38:
 1228 01c2 43794578 		.ascii	"CyExitCriticalSection\000"
 1228      69744372 
 1228      69746963 
 1228      616C5365 
 1228      6374696F 
 1229              	.LASF39:
 1230 01d8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1230      43313120 
 1230      352E342E 
 1230      31203230 
 1230      31363036 
 1231 020b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1231      20726576 
 1231      6973696F 
 1231      6E203233 
 1231      37373135 
 1232 023e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 38


 1232      66756E63 
 1232      74696F6E 
 1232      2D736563 
 1232      74696F6E 
 1233              	.LASF17:
 1234 0266 73697A65 		.ascii	"sizetype\000"
 1234      74797065 
 1234      00
 1235              	.LASF30:
 1236 026f 4D41494E 		.ascii	"MAIN_TIMER_ReadCapture\000"
 1236      5F54494D 
 1236      45525F52 
 1236      65616443 
 1236      61707475 
 1237              	.LASF35:
 1238 0286 4D41494E 		.ascii	"MAIN_TIMER_Init\000"
 1238      5F54494D 
 1238      45525F49 
 1238      6E697400 
 1239              	.LASF6:
 1240 0296 6C6F6E67 		.ascii	"long long int\000"
 1240      206C6F6E 
 1240      6720696E 
 1240      7400
 1241              	.LASF40:
 1242 02a4 47656E65 		.ascii	"Generated_Source\\PSoC5\\MAIN_TIMER.c\000"
 1242      72617465 
 1242      645F536F 
 1242      75726365 
 1242      5C50536F 
 1243              	.LASF25:
 1244 02c8 696E7465 		.ascii	"interruptMode\000"
 1244      72727570 
 1244      744D6F64 
 1244      6500
 1245              	.LASF20:
 1246 02d6 4D41494E 		.ascii	"MAIN_TIMER_SoftwareCapture\000"
 1246      5F54494D 
 1246      45525F53 
 1246      6F667477 
 1246      61726543 
 1247              	.LASF2:
 1248 02f1 73686F72 		.ascii	"short int\000"
 1248      7420696E 
 1248      7400
 1249              	.LASF23:
 1250 02fb 4D41494E 		.ascii	"MAIN_TIMER_SetInterruptMode\000"
 1250      5F54494D 
 1250      45525F53 
 1250      6574496E 
 1250      74657272 
 1251              	.LASF41:
 1252 0317 433A5C55 		.ascii	"C:\\Users\\Lory\\Desktop\\info_projects\\git_reposi"
 1252      73657273 
 1252      5C4C6F72 
 1252      795C4465 
 1252      736B746F 
ARM GAS  C:\Users\Lory\AppData\Local\Temp\ccvZ144b.s 			page 39


 1253 0345 746F7269 		.ascii	"tories\\PSoC-Final-Project\\AY1920_II_HW_FINAL_CARZ"
 1253      65735C50 
 1253      536F432D 
 1253      46696E61 
 1253      6C2D5072 
 1254 0376 414E4947 		.ascii	"ANIGA_GUALNIERA\\AY1920_II_HW_FINAL_CARZANIGA_GUALN"
 1254      415F4755 
 1254      414C4E49 
 1254      4552415C 
 1254      41593139 
 1255 03a8 49455241 		.ascii	"IERA.cydsn\000"
 1255      2E637964 
 1255      736E00
 1256              	.LASF4:
 1257 03b3 6C6F6E67 		.ascii	"long int\000"
 1257      20696E74 
 1257      00
 1258              	.LASF13:
 1259 03bc 63686172 		.ascii	"char\000"
 1259      00
 1260              	.LASF16:
 1261 03c1 6C6F6E67 		.ascii	"long double\000"
 1261      20646F75 
 1261      626C6500 
 1262              	.LASF27:
 1263 03cd 4D41494E 		.ascii	"MAIN_TIMER_ReadPeriod\000"
 1263      5F54494D 
 1263      45525F52 
 1263      65616450 
 1263      6572696F 
 1264              	.LASF0:
 1265 03e3 7369676E 		.ascii	"signed char\000"
 1265      65642063 
 1265      68617200 
 1266              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
